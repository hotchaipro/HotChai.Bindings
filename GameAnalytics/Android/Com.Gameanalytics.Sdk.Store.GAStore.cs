//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.GameAnalytics.Sdk.Store {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.gameanalytics.sdk.store']/class[@name='GAStore']"
	[global::Android.Runtime.Register ("com/gameanalytics/sdk/store/GAStore", DoNotGenerateAcw=true)]
	public partial class GAStore : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/gameanalytics/sdk/store/GAStore", typeof (GAStore));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected GAStore (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		public static unsafe long DbSizeBytes {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.store']/class[@name='GAStore']/method[@name='getDbSizeBytes' and count(parameter)=0]"
			[Register ("getDbSizeBytes", "()J", "")]
			get {
				const string __id = "getDbSizeBytes.()J";
				try {
					var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool IsDbTooLargeForEvents {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.store']/class[@name='GAStore']/method[@name='isDbTooLargeForEvents' and count(parameter)=0]"
			[Register ("isDbTooLargeForEvents", "()Z", "")]
			get {
				const string __id = "isDbTooLargeForEvents.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe bool TableReady {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.store']/class[@name='GAStore']/method[@name='getTableReady' and count(parameter)=0]"
			[Register ("getTableReady", "()Z", "")]
			get {
				const string __id = "getTableReady.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.store']/class[@name='GAStore']/method[@name='ensureDatabase' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("ensureDatabase", "(Z)Z", "")]
		public static unsafe bool EnsureDatabase (bool dropDatabase)
		{
			const string __id = "ensureDatabase.(Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (dropDatabase);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.store']/class[@name='GAStore']/method[@name='executeQuerySync' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("executeQuerySync", "(Ljava/lang/String;)Lorg/json/JSONArray;", "")]
		public static unsafe global::Org.Json.JSONArray ExecuteQuerySync (string sql)
		{
			const string __id = "executeQuerySync.(Ljava/lang/String;)Lorg/json/JSONArray;";
			IntPtr native_sql = JNIEnv.NewString ((string)sql);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_sql);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Org.Json.JSONArray> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_sql);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.store']/class[@name='GAStore']/method[@name='executeQuerySync' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;']]"
		[Register ("executeQuerySync", "(Ljava/lang/String;Ljava/util/ArrayList;)Lorg/json/JSONArray;", "")]
		public static unsafe global::Org.Json.JSONArray ExecuteQuerySync (string sql, global::System.Collections.Generic.IList<string> parameters)
		{
			const string __id = "executeQuerySync.(Ljava/lang/String;Ljava/util/ArrayList;)Lorg/json/JSONArray;";
			IntPtr native_sql = JNIEnv.NewString ((string)sql);
			IntPtr native_parameters = global::Android.Runtime.JavaList<string>.ToLocalJniHandle (parameters);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_sql);
				__args [1] = new JniArgumentValue (native_parameters);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Org.Json.JSONArray> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_sql);
				JNIEnv.DeleteLocalRef (native_parameters);
				global::System.GC.KeepAlive (parameters);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.store']/class[@name='GAStore']/method[@name='executeQuerySync' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.ArrayList&lt;java.lang.String&gt;'] and parameter[3][@type='boolean']]"
		[Register ("executeQuerySync", "(Ljava/lang/String;Ljava/util/ArrayList;Z)Lorg/json/JSONArray;", "")]
		public static unsafe global::Org.Json.JSONArray ExecuteQuerySync (string sql, global::System.Collections.Generic.IList<string> parameters, bool useTransaction)
		{
			const string __id = "executeQuerySync.(Ljava/lang/String;Ljava/util/ArrayList;Z)Lorg/json/JSONArray;";
			IntPtr native_sql = JNIEnv.NewString ((string)sql);
			IntPtr native_parameters = global::Android.Runtime.JavaList<string>.ToLocalJniHandle (parameters);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_sql);
				__args [1] = new JniArgumentValue (native_parameters);
				__args [2] = new JniArgumentValue (useTransaction);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Org.Json.JSONArray> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_sql);
				JNIEnv.DeleteLocalRef (native_parameters);
				global::System.GC.KeepAlive (parameters);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.store']/class[@name='GAStore']/method[@name='setState' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("setState", "(Ljava/lang/String;Ljava/lang/String;)Z", "")]
		public static unsafe bool SetState (string key, string value)
		{
			const string __id = "setState.(Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_key = JNIEnv.NewString ((string)key);
			IntPtr native_value = JNIEnv.NewString ((string)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_key);
				__args [1] = new JniArgumentValue (native_value);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

	}
}
