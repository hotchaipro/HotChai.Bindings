//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.GameAnalytics.Sdk.Device {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']"
	[global::Android.Runtime.Register ("com/gameanalytics/sdk/device/GADevice", DoNotGenerateAcw=true)]
	public partial class GADevice : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/field[@name='doTrackGAID']"
		[Register ("doTrackGAID")]
		public static bool DoTrackGAID {
			get {
				const string __id = "doTrackGAID.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "doTrackGAID.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']"
		[global::Android.Runtime.Register ("com/gameanalytics/sdk/device/GADevice$DeviceInfo", DoNotGenerateAcw=true)]
		public partial class DeviceInfo : global::Java.Lang.Object {

			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='appCpuUsage']"
			[Register ("appCpuUsage")]
			public long AppCpuUsage {
				get {
					const string __id = "appCpuUsage.J";

					var __v = _members.InstanceFields.GetInt64Value (__id, this);
					return __v;
				}
				set {
					const string __id = "appCpuUsage.J";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='availableDeviceStorage']"
			[Register ("availableDeviceStorage")]
			public double AvailableDeviceStorage {
				get {
					const string __id = "availableDeviceStorage.D";

					var __v = _members.InstanceFields.GetDoubleValue (__id, this);
					return __v;
				}
				set {
					const string __id = "availableDeviceStorage.D";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='availableExternalStorage']"
			[Register ("availableExternalStorage")]
			public double AvailableExternalStorage {
				get {
					const string __id = "availableExternalStorage.D";

					var __v = _members.InstanceFields.GetDoubleValue (__id, this);
					return __v;
				}
				set {
					const string __id = "availableExternalStorage.D";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='cpuLoad']"
			[Register ("cpuLoad")]
			public long CpuLoad {
				get {
					const string __id = "cpuLoad.J";

					var __v = _members.InstanceFields.GetInt64Value (__id, this);
					return __v;
				}
				set {
					const string __id = "cpuLoad.J";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='cpuName']"
			[Register ("cpuName")]
			public string CpuName {
				get {
					const string __id = "cpuName.Ljava/lang/String;";

					var __v = _members.InstanceFields.GetObjectValue (__id, this);
					return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
				set {
					const string __id = "cpuName.Ljava/lang/String;";

					IntPtr native_value = JNIEnv.NewString ((string)value);
					try {
						_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
					} finally {
						JNIEnv.DeleteLocalRef (native_value);
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='enableExternalStorageTracking']"
			[Register ("enableExternalStorageTracking")]
			public static bool EnableExternalStorageTracking {
				get {
					const string __id = "enableExternalStorageTracking.Z";

					var __v = _members.StaticFields.GetBooleanValue (__id);
					return __v;
				}
				set {
					const string __id = "enableExternalStorageTracking.Z";

					try {
						_members.StaticFields.SetValue (__id, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='enableFPSTracking']"
			[Register ("enableFPSTracking")]
			public static bool EnableFPSTracking {
				get {
					const string __id = "enableFPSTracking.Z";

					var __v = _members.StaticFields.GetBooleanValue (__id);
					return __v;
				}
				set {
					const string __id = "enableFPSTracking.Z";

					try {
						_members.StaticFields.SetValue (__id, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='enableGpuTracking']"
			[Register ("enableGpuTracking")]
			public static bool EnableGpuTracking {
				get {
					const string __id = "enableGpuTracking.Z";

					var __v = _members.StaticFields.GetBooleanValue (__id);
					return __v;
				}
				set {
					const string __id = "enableGpuTracking.Z";

					try {
						_members.StaticFields.SetValue (__id, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='enableHardwareTracking']"
			[Register ("enableHardwareTracking")]
			public static bool EnableHardwareTracking {
				get {
					const string __id = "enableHardwareTracking.Z";

					var __v = _members.StaticFields.GetBooleanValue (__id);
					return __v;
				}
				set {
					const string __id = "enableHardwareTracking.Z";

					try {
						_members.StaticFields.SetValue (__id, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='enableMemoryHistograms']"
			[Register ("enableMemoryHistograms")]
			public static bool EnableMemoryHistograms {
				get {
					const string __id = "enableMemoryHistograms.Z";

					var __v = _members.StaticFields.GetBooleanValue (__id);
					return __v;
				}
				set {
					const string __id = "enableMemoryHistograms.Z";

					try {
						_members.StaticFields.SetValue (__id, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='enableMemoryTracking']"
			[Register ("enableMemoryTracking")]
			public static bool EnableMemoryTracking {
				get {
					const string __id = "enableMemoryTracking.Z";

					var __v = _members.StaticFields.GetBooleanValue (__id);
					return __v;
				}
				set {
					const string __id = "enableMemoryTracking.Z";

					try {
						_members.StaticFields.SetValue (__id, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='enableStorageTracking']"
			[Register ("enableStorageTracking")]
			public static bool EnableStorageTracking {
				get {
					const string __id = "enableStorageTracking.Z";

					var __v = _members.StaticFields.GetBooleanValue (__id);
					return __v;
				}
				set {
					const string __id = "enableStorageTracking.Z";

					try {
						_members.StaticFields.SetValue (__id, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='gpuClockMhz']"
			[Register ("gpuClockMhz")]
			public long GpuClockMhz {
				get {
					const string __id = "gpuClockMhz.J";

					var __v = _members.InstanceFields.GetInt64Value (__id, this);
					return __v;
				}
				set {
					const string __id = "gpuClockMhz.J";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='gpuLoad']"
			[Register ("gpuLoad")]
			public long GpuLoad {
				get {
					const string __id = "gpuLoad.J";

					var __v = _members.InstanceFields.GetInt64Value (__id, this);
					return __v;
				}
				set {
					const string __id = "gpuLoad.J";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='gpuModel']"
			[Register ("gpuModel")]
			public string GpuModel {
				get {
					const string __id = "gpuModel.Ljava/lang/String;";

					var __v = _members.InstanceFields.GetObjectValue (__id, this);
					return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
				set {
					const string __id = "gpuModel.Ljava/lang/String;";

					IntPtr native_value = JNIEnv.NewString ((string)value);
					try {
						_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
					} finally {
						JNIEnv.DeleteLocalRef (native_value);
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='hardware']"
			[Register ("hardware")]
			public string Hardware {
				get {
					const string __id = "hardware.Ljava/lang/String;";

					var __v = _members.InstanceFields.GetObjectValue (__id, this);
					return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
				set {
					const string __id = "hardware.Ljava/lang/String;";

					IntPtr native_value = JNIEnv.NewString ((string)value);
					try {
						_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
					} finally {
						JNIEnv.DeleteLocalRef (native_value);
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='isLowMemory']"
			[Register ("isLowMemory")]
			public bool IsLowMemory {
				get {
					const string __id = "isLowMemory.Z";

					var __v = _members.InstanceFields.GetBooleanValue (__id, this);
					return __v;
				}
				set {
					const string __id = "isLowMemory.Z";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='memAvailable']"
			[Register ("memAvailable")]
			public double MemAvailable {
				get {
					const string __id = "memAvailable.D";

					var __v = _members.InstanceFields.GetDoubleValue (__id, this);
					return __v;
				}
				set {
					const string __id = "memAvailable.D";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='memTotal']"
			[Register ("memTotal")]
			public double MemTotal {
				get {
					const string __id = "memTotal.D";

					var __v = _members.InstanceFields.GetDoubleValue (__id, this);
					return __v;
				}
				set {
					const string __id = "memTotal.D";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='numCores']"
			[Register ("numCores")]
			public int NumCores {
				get {
					const string __id = "numCores.I";

					var __v = _members.InstanceFields.GetInt32Value (__id, this);
					return __v;
				}
				set {
					const string __id = "numCores.I";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='screenHeight']"
			[Register ("screenHeight")]
			public int ScreenHeight {
				get {
					const string __id = "screenHeight.I";

					var __v = _members.InstanceFields.GetInt32Value (__id, this);
					return __v;
				}
				set {
					const string __id = "screenHeight.I";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='screenWidth']"
			[Register ("screenWidth")]
			public int ScreenWidth {
				get {
					const string __id = "screenWidth.I";

					var __v = _members.InstanceFields.GetInt32Value (__id, this);
					return __v;
				}
				set {
					const string __id = "screenWidth.I";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='totalDeviceStorage']"
			[Register ("totalDeviceStorage")]
			public double TotalDeviceStorage {
				get {
					const string __id = "totalDeviceStorage.D";

					var __v = _members.InstanceFields.GetDoubleValue (__id, this);
					return __v;
				}
				set {
					const string __id = "totalDeviceStorage.D";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/field[@name='totalExternalStorage']"
			[Register ("totalExternalStorage")]
			public double TotalExternalStorage {
				get {
					const string __id = "totalExternalStorage.D";

					var __v = _members.InstanceFields.GetDoubleValue (__id, this);
					return __v;
				}
				set {
					const string __id = "totalExternalStorage.D";

					try {
						_members.InstanceFields.SetValue (__id, this, value);
					} finally {
					}
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/gameanalytics/sdk/device/GADevice$DeviceInfo", typeof (DeviceInfo));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected DeviceInfo (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/constructor[@name='GADevice.DeviceInfo' and count(parameter)=0]"
			[Register (".ctor", "()V", "")]
			public unsafe DeviceInfo () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, null);
				} finally {
				}
			}

			static Delegate cb_GetAppMemoryUsage;
#pragma warning disable 0169
			static Delegate GetGetAppMemoryUsageHandler ()
			{
				if (cb_GetAppMemoryUsage == null)
					cb_GetAppMemoryUsage = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_D (n_GetAppMemoryUsage));
				return cb_GetAppMemoryUsage;
			}

			static double n_GetAppMemoryUsage (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.GameAnalytics.Sdk.Device.GADevice.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.AppMemoryUsage;
			}
#pragma warning restore 0169

			public virtual unsafe double AppMemoryUsage {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='GetAppMemoryUsage' and count(parameter)=0]"
				[Register ("GetAppMemoryUsage", "()D", "GetGetAppMemoryUsageHandler")]
				get {
					const string __id = "GetAppMemoryUsage.()D";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualDoubleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
			}

			public static unsafe long AppUptime {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='GetAppUptime' and count(parameter)=0]"
				[Register ("GetAppUptime", "()J", "")]
				get {
					const string __id = "GetAppUptime.()J";
					try {
						var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
						return __rm;
					} finally {
					}
				}
			}

			public static unsafe bool IsHealthEventEnabled {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='IsHealthEventEnabled' and count(parameter)=0]"
				[Register ("IsHealthEventEnabled", "()Z", "")]
				get {
					const string __id = "IsHealthEventEnabled.()Z";
					try {
						var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
						return __rm;
					} finally {
					}
				}
			}

			static Delegate cb_GetSystemMemoryUsage;
#pragma warning disable 0169
			static Delegate GetGetSystemMemoryUsageHandler ()
			{
				if (cb_GetSystemMemoryUsage == null)
					cb_GetSystemMemoryUsage = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_D (n_GetSystemMemoryUsage));
				return cb_GetSystemMemoryUsage;
			}

			static double n_GetSystemMemoryUsage (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.GameAnalytics.Sdk.Device.GADevice.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.SystemMemoryUsage;
			}
#pragma warning restore 0169

			public virtual unsafe double SystemMemoryUsage {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='GetSystemMemoryUsage' and count(parameter)=0]"
				[Register ("GetSystemMemoryUsage", "()D", "GetGetSystemMemoryUsageHandler")]
				get {
					const string __id = "GetSystemMemoryUsage.()D";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualDoubleMethod (__id, this, null);
						return __rm;
					} finally {
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='ConvertBytesToGB' and count(parameter)=1 and parameter[1][@type='double']]"
			[Register ("ConvertBytesToGB", "(D)D", "")]
			public static unsafe double ConvertBytesToGB (double value)
			{
				const string __id = "ConvertBytesToGB.(D)D";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					var __rm = _members.StaticMethods.InvokeDoubleMethod (__id, __args);
					return __rm;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='ConvertBytesToKB' and count(parameter)=1 and parameter[1][@type='double']]"
			[Register ("ConvertBytesToKB", "(D)D", "")]
			public static unsafe double ConvertBytesToKB (double value)
			{
				const string __id = "ConvertBytesToKB.(D)D";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					var __rm = _members.StaticMethods.InvokeDoubleMethod (__id, __args);
					return __rm;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='ConvertBytesToMB' and count(parameter)=1 and parameter[1][@type='double']]"
			[Register ("ConvertBytesToMB", "(D)D", "")]
			public static unsafe double ConvertBytesToMB (double value)
			{
				const string __id = "ConvertBytesToMB.(D)D";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					var __rm = _members.StaticMethods.InvokeDoubleMethod (__id, __args);
					return __rm;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='ConvertKbToGB' and count(parameter)=1 and parameter[1][@type='double']]"
			[Register ("ConvertKbToGB", "(D)D", "")]
			public static unsafe double ConvertKbToGB (double value)
			{
				const string __id = "ConvertKbToGB.(D)D";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					var __rm = _members.StaticMethods.InvokeDoubleMethod (__id, __args);
					return __rm;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='GetAppMemoryPercentage' and count(parameter)=0]"
			[Register ("GetAppMemoryPercentage", "()[I", "")]
			public static unsafe int[] GetAppMemoryPercentage ()
			{
				const string __id = "GetAppMemoryPercentage.()[I";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return (int[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='GetSysMemoryPercentage' and count(parameter)=0]"
			[Register ("GetSysMemoryPercentage", "()[I", "")]
			public static unsafe int[] GetSysMemoryPercentage ()
			{
				const string __id = "GetSysMemoryPercentage.()[I";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return (int[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (int));
				} finally {
				}
			}

			static Delegate cb_ReadHardwareInfo;
#pragma warning disable 0169
			static Delegate GetReadHardwareInfoHandler ()
			{
				if (cb_ReadHardwareInfo == null)
					cb_ReadHardwareInfo = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ReadHardwareInfo));
				return cb_ReadHardwareInfo;
			}

			static void n_ReadHardwareInfo (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.GameAnalytics.Sdk.Device.GADevice.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.ReadHardwareInfo ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='ReadHardwareInfo' and count(parameter)=0]"
			[Register ("ReadHardwareInfo", "()V", "GetReadHardwareInfoHandler")]
			public virtual unsafe void ReadHardwareInfo ()
			{
				const string __id = "ReadHardwareInfo.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate cb_ReadInfo;
#pragma warning disable 0169
			static Delegate GetReadInfoHandler ()
			{
				if (cb_ReadInfo == null)
					cb_ReadInfo = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_ReadInfo));
				return cb_ReadInfo;
			}

			static bool n_ReadInfo (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.GameAnalytics.Sdk.Device.GADevice.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.ReadInfo ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='ReadInfo' and count(parameter)=0]"
			[Register ("ReadInfo", "()Z", "GetReadInfoHandler")]
			public virtual unsafe bool ReadInfo ()
			{
				const string __id = "ReadInfo.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='SampleMemoryUsage' and count(parameter)=0]"
			[Register ("SampleMemoryUsage", "()Landroid/util/Pair;", "")]
			public static unsafe global::Android.Util.Pair SampleMemoryUsage ()
			{
				const string __id = "SampleMemoryUsage.()Landroid/util/Pair;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Android.Util.Pair> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate cb_UsedSysMemory;
#pragma warning disable 0169
			static Delegate GetUsedSysMemoryHandler ()
			{
				if (cb_UsedSysMemory == null)
					cb_UsedSysMemory = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_D (n_UsedSysMemory));
				return cb_UsedSysMemory;
			}

			static double n_UsedSysMemory (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.GameAnalytics.Sdk.Device.GADevice.DeviceInfo> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.UsedSysMemory ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice.DeviceInfo']/method[@name='UsedSysMemory' and count(parameter)=0]"
			[Register ("UsedSysMemory", "()D", "GetUsedSysMemoryHandler")]
			public virtual unsafe double UsedSysMemory ()
			{
				const string __id = "UsedSysMemory.()D";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualDoubleMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/gameanalytics/sdk/device/GADevice", typeof (GADevice));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected GADevice (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/constructor[@name='GADevice' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe GADevice () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe string AdIdSource {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getAdIdSource' and count(parameter)=0]"
			[Register ("getAdIdSource", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getAdIdSource.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setAdIdSource' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setAdIdSource", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setAdIdSource.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe int AppBuild {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getAppBuild' and count(parameter)=0]"
			[Register ("getAppBuild", "()I", "")]
			get {
				const string __id = "getAppBuild.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setAppBuild' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setAppBuild", "(I)V", "")]
			set {
				const string __id = "setAppBuild.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		public static unsafe string AppSetId {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getAppSetId' and count(parameter)=0]"
			[Register ("getAppSetId", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getAppSetId.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string AppSignature {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getAppSignature' and count(parameter)=0]"
			[Register ("getAppSignature", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getAppSignature.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setAppSignature' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setAppSignature", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setAppSignature.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe string AppVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getAppVersion' and count(parameter)=0]"
			[Register ("getAppVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getAppVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setAppVersion' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setAppVersion", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setAppVersion.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe string BuildPlatform {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getBuildPlatform' and count(parameter)=0]"
			[Register ("getBuildPlatform", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getBuildPlatform.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string BundleIdentifier {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getBundleIdentifier' and count(parameter)=0]"
			[Register ("getBundleIdentifier", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getBundleIdentifier.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string ChannelId {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getChannelId' and count(parameter)=0]"
			[Register ("getChannelId", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getChannelId.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setChannelId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setChannelId", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setChannelId.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe string ConnectionType {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getConnectionType' and count(parameter)=0]"
			[Register ("getConnectionType", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getConnectionType.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setConnectionType' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setConnectionType", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setConnectionType.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe string DeviceManufacturer {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getDeviceManufacturer' and count(parameter)=0]"
			[Register ("getDeviceManufacturer", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getDeviceManufacturer.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string DeviceModel {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getDeviceModel' and count(parameter)=0]"
			[Register ("getDeviceModel", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getDeviceModel.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string GAID {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getGAID' and count(parameter)=0]"
			[Register ("getGAID", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getGAID.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string GameEngineVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getGameEngineVersion' and count(parameter)=0]"
			[Register ("getGameEngineVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getGameEngineVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setGameEngineVersion' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setGameEngineVersion", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setGameEngineVersion.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe bool IsHacked {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getIsHacked' and count(parameter)=0]"
			[Register ("getIsHacked", "()Z", "")]
			get {
				const string __id = "getIsHacked.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setIsHacked' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setIsHacked", "(Z)V", "")]
			set {
				const string __id = "setIsHacked.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		public static unsafe bool IsLimitedAdTracking {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getIsLimitedAdTracking' and count(parameter)=0]"
			[Register ("getIsLimitedAdTracking", "()Z", "")]
			get {
				const string __id = "getIsLimitedAdTracking.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setIsLimitedAdTracking' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setIsLimitedAdTracking", "(Z)V", "")]
			set {
				const string __id = "setIsLimitedAdTracking.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		public static unsafe string OAID {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getOAID' and count(parameter)=0]"
			[Register ("getOAID", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getOAID.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string OSVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getOSVersion' and count(parameter)=0]"
			[Register ("getOSVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getOSVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string RelevantSdkVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getRelevantSdkVersion' and count(parameter)=0]"
			[Register ("getRelevantSdkVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getRelevantSdkVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string WritableFilePath {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='getWritableFilePath' and count(parameter)=0]"
			[Register ("getWritableFilePath", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getWritableFilePath.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setWritableFilePath' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setWritableFilePath", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setWritableFilePath.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='ReadDeviceInfo' and count(parameter)=0]"
		[Register ("ReadDeviceInfo", "()Lcom/gameanalytics/sdk/device/GADevice$DeviceInfo;", "")]
		public static unsafe global::Com.GameAnalytics.Sdk.Device.GADevice.DeviceInfo ReadDeviceInfo ()
		{
			const string __id = "ReadDeviceInfo.()Lcom/gameanalytics/sdk/device/GADevice$DeviceInfo;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return global::Java.Lang.Object.GetObject<global::Com.GameAnalytics.Sdk.Device.GADevice.DeviceInfo> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='reloadAdId' and count(parameter)=0]"
		[Register ("reloadAdId", "()V", "")]
		public static unsafe void ReloadAdId ()
		{
			const string __id = "reloadAdId.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setBundleId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setBundleId", "(Ljava/lang/String;)V", "")]
		public static unsafe void SetBundleId (string bundleId)
		{
			const string __id = "setBundleId.(Ljava/lang/String;)V";
			IntPtr native_bundleId = JNIEnv.NewString ((string)bundleId);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_bundleId);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_bundleId);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.device']/class[@name='GADevice']/method[@name='setSdkGameEngineVersion' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setSdkGameEngineVersion", "(Ljava/lang/String;)V", "")]
		public static unsafe void SetSdkGameEngineVersion (string version)
		{
			const string __id = "setSdkGameEngineVersion.(Ljava/lang/String;)V";
			IntPtr native_version = JNIEnv.NewString ((string)version);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_version);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_version);
			}
		}

	}
}
