//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.GameAnalytics.Sdk.Logging {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.gameanalytics.sdk.logging']/class[@name='GALogger']"
	[global::Android.Runtime.Register ("com/gameanalytics/sdk/logging/GALogger", DoNotGenerateAcw=true)]
	public partial class GALogger : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/gameanalytics/sdk/logging/GALogger", typeof (GALogger));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected GALogger (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		public static unsafe bool AdvancedInfoLog {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.logging']/class[@name='GALogger']/method[@name='getAdvancedInfoLog' and count(parameter)=0]"
			[Register ("getAdvancedInfoLog", "()Z", "")]
			get {
				const string __id = "getAdvancedInfoLog.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.logging']/class[@name='GALogger']/method[@name='setAdvancedInfoLog' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setAdvancedInfoLog", "(Z)V", "")]
			set {
				const string __id = "setAdvancedInfoLog.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		public static unsafe bool InfoLog {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.logging']/class[@name='GALogger']/method[@name='getInfoLog' and count(parameter)=0]"
			[Register ("getInfoLog", "()Z", "")]
			get {
				const string __id = "getInfoLog.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.logging']/class[@name='GALogger']/method[@name='setInfoLog' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setInfoLog", "(Z)V", "")]
			set {
				const string __id = "setInfoLog.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.logging']/class[@name='GALogger']/method[@name='d' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("d", "(Ljava/lang/String;)V", "")]
		public static unsafe void D (string format)
		{
			const string __id = "d.(Ljava/lang/String;)V";
			IntPtr native_format = JNIEnv.NewString ((string)format);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_format);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_format);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.logging']/class[@name='GALogger']/method[@name='e' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("e", "(Ljava/lang/String;)V", "")]
		public static unsafe void E (string format)
		{
			const string __id = "e.(Ljava/lang/String;)V";
			IntPtr native_format = JNIEnv.NewString ((string)format);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_format);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_format);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.logging']/class[@name='GALogger']/method[@name='i' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("i", "(Ljava/lang/String;)V", "")]
		public static unsafe void I (string format)
		{
			const string __id = "i.(Ljava/lang/String;)V";
			IntPtr native_format = JNIEnv.NewString ((string)format);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_format);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_format);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.logging']/class[@name='GALogger']/method[@name='ii' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("ii", "(Ljava/lang/String;)V", "")]
		public static unsafe void Ii (string format)
		{
			const string __id = "ii.(Ljava/lang/String;)V";
			IntPtr native_format = JNIEnv.NewString ((string)format);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_format);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_format);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.logging']/class[@name='GALogger']/method[@name='w' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("w", "(Ljava/lang/String;)V", "")]
		public static unsafe void W (string format)
		{
			const string __id = "w.(Ljava/lang/String;)V";
			IntPtr native_format = JNIEnv.NewString ((string)format);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_format);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_format);
			}
		}

	}
}
