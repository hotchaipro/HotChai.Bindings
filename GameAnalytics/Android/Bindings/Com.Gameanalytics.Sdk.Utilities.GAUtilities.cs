//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.GameAnalytics.Sdk.Utilities {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']"
	[global::Android.Runtime.Register ("com/gameanalytics/sdk/utilities/GAUtilities", DoNotGenerateAcw=true)]
	public partial class GAUtilities : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/field[@name='GAID_PACKAGE_NAME']"
		[Register ("GAID_PACKAGE_NAME")]
		public const string GaidPackageName = (string) "com.google.android.gms.ads.identifier";

		// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/field[@name='OAID_PACKAGE_NAME']"
		[Register ("OAID_PACKAGE_NAME")]
		public const string OaidPackageName = (string) "com.huawei.hms.ads.identifier";

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/gameanalytics/sdk/utilities/GAUtilities", typeof (GAUtilities));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected GAUtilities (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/constructor[@name='GAUtilities' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe GAUtilities () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='array' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("array", "(Ljava/lang/String;)Lorg/json/JSONArray;", "")]
		public static unsafe global::Org.Json.JSONArray Array (string @string)
		{
			const string __id = "array.(Ljava/lang/String;)Lorg/json/JSONArray;";
			IntPtr native__string = JNIEnv.NewString ((string)@string);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native__string);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Org.Json.JSONArray> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native__string);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='dictionary' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("dictionary", "(Ljava/lang/String;)Lorg/json/JSONObject;", "")]
		public static unsafe global::Org.Json.JSONObject Dictionary (string @string)
		{
			const string __id = "dictionary.(Ljava/lang/String;)Lorg/json/JSONObject;";
			IntPtr native__string = JNIEnv.NewString ((string)@string);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native__string);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Org.Json.JSONObject> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native__string);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='getGAID' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("getGAID", "(Landroid/content/Context;)Ljava/lang/String;", "")]
		public static unsafe string GetGAID (global::Android.Content.Context context)
		{
			const string __id = "getGAID.(Landroid/content/Context;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='getOAID' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("getOAID", "(Landroid/content/Context;)Ljava/lang/String;", "")]
		public static unsafe string GetOAID (global::Android.Content.Context context)
		{
			const string __id = "getOAID.(Landroid/content/Context;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='gzipCompress' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("gzipCompress", "(Ljava/lang/String;)[B", "")]
		public static unsafe byte[] GzipCompress (string data)
		{
			const string __id = "gzipCompress.(Ljava/lang/String;)[B";
			IntPtr native_data = JNIEnv.NewString ((string)data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='gzipDecompress' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("gzipDecompress", "([B)Ljava/lang/String;", "")]
		public static unsafe string GzipDecompress (byte[] data)
		{
			const string __id = "gzipDecompress.([B)Ljava/lang/String;";
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='hmac' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='byte[]']]"
		[Register ("hmac", "(Ljava/lang/String;[B)Ljava/lang/String;", "")]
		public static unsafe string Hmac (string key, byte[] data)
		{
			const string __id = "hmac.(Ljava/lang/String;[B)Ljava/lang/String;";
			IntPtr native_key = JNIEnv.NewString ((string)key);
			IntPtr native_data = JNIEnv.NewArray (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_key);
				__args [1] = new JniArgumentValue (native_data);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
				if (data != null) {
					JNIEnv.CopyArray (native_data, data);
					JNIEnv.DeleteLocalRef (native_data);
				}
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='isLimitAdTrackingEnabled' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='android.content.Context']]"
		[Register ("isLimitAdTrackingEnabled", "(Ljava/lang/String;Landroid/content/Context;)Ljava/lang/Boolean;", "")]
		public static unsafe global::Java.Lang.Boolean IsLimitAdTrackingEnabled (string packageName, global::Android.Content.Context context)
		{
			const string __id = "isLimitAdTrackingEnabled.(Ljava/lang/String;Landroid/content/Context;)Ljava/lang/Boolean;";
			IntPtr native_packageName = JNIEnv.NewString ((string)packageName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_packageName);
				__args [1] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Boolean> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_packageName);
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='isZeroId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("isZeroId", "(Ljava/lang/String;)Z", "")]
		public static unsafe bool IsZeroId (string id)
		{
			const string __id = "isZeroId.(Ljava/lang/String;)Z";
			IntPtr native_id = JNIEnv.NewString ((string)id);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_id);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_id);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='joinStringArray' and count(parameter)=2 and parameter[1][@type='java.lang.String[]'] and parameter[2][@type='java.lang.String']]"
		[Register ("joinStringArray", "([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string JoinStringArray (string[] v, string delimiter)
		{
			const string __id = "joinStringArray.([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_v = JNIEnv.NewArray (v);
			IntPtr native_delimiter = JNIEnv.NewString ((string)delimiter);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_v);
				__args [1] = new JniArgumentValue (native_delimiter);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (v != null) {
					JNIEnv.CopyArray (native_v, v);
					JNIEnv.DeleteLocalRef (native_v);
				}
				JNIEnv.DeleteLocalRef (native_delimiter);
				global::System.GC.KeepAlive (v);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='jsonString' and count(parameter)=1 and parameter[1][@type='java.util.ArrayList&lt;org.json.JSONObject&gt;']]"
		[Register ("jsonString", "(Ljava/util/ArrayList;)Ljava/lang/String;", "")]
		public static unsafe string JsonString (global::System.Collections.Generic.IList<global::Org.Json.JSONObject> arr)
		{
			const string __id = "jsonString.(Ljava/util/ArrayList;)Ljava/lang/String;";
			IntPtr native_arr = global::Android.Runtime.JavaList<global::Org.Json.JSONObject>.ToLocalJniHandle (arr);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_arr);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_arr);
				global::System.GC.KeepAlive (arr);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='stringArrayContainsString' and count(parameter)=2 and parameter[1][@type='java.lang.String[]'] and parameter[2][@type='java.lang.String']]"
		[Register ("stringArrayContainsString", "([Ljava/lang/String;Ljava/lang/String;)Z", "")]
		public static unsafe bool StringArrayContainsString (string[] array, string search)
		{
			const string __id = "stringArrayContainsString.([Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_array = JNIEnv.NewArray (array);
			IntPtr native_search = JNIEnv.NewString ((string)search);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_array);
				__args [1] = new JniArgumentValue (native_search);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				if (array != null) {
					JNIEnv.CopyArray (native_array, array);
					JNIEnv.DeleteLocalRef (native_array);
				}
				JNIEnv.DeleteLocalRef (native_search);
				global::System.GC.KeepAlive (array);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='stringMatch' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("stringMatch", "(Ljava/lang/String;Ljava/lang/String;)Z", "")]
		public static unsafe bool StringMatch (string @string, string pattern)
		{
			const string __id = "stringMatch.(Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native__string = JNIEnv.NewString ((string)@string);
			IntPtr native_pattern = JNIEnv.NewString ((string)pattern);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native__string);
				__args [1] = new JniArgumentValue (native_pattern);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native__string);
				JNIEnv.DeleteLocalRef (native_pattern);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='GAUtilities']/method[@name='timeIntervalSince1970' and count(parameter)=0]"
		[Register ("timeIntervalSince1970", "()J", "")]
		public static unsafe long TimeIntervalSince1970 ()
		{
			const string __id = "timeIntervalSince1970.()J";
			try {
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
				return __rm;
			} finally {
			}
		}

	}
}
