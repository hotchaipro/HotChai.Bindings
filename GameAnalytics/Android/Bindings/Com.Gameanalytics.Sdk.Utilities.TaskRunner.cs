//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.GameAnalytics.Sdk.Utilities {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='TaskRunner']"
	[global::Android.Runtime.Register ("com/gameanalytics/sdk/utilities/TaskRunner", DoNotGenerateAcw=true)]
	public sealed partial class TaskRunner : global::Java.Lang.Object {
		// Metadata.xml XPath interface reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/interface[@name='TaskRunner.Callback']"
		[Register ("com/gameanalytics/sdk/utilities/TaskRunner$Callback", "", "Com.GameAnalytics.Sdk.Utilities.TaskRunner/ICallbackInvoker")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"R"})]
		public partial interface ICallback : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/interface[@name='TaskRunner.Callback']/method[@name='onComplete' and count(parameter)=1 and parameter[1][@type='R']]"
			[Register ("onComplete", "(Ljava/lang/Object;)V", "GetOnComplete_Ljava_lang_Object_Handler:Com.GameAnalytics.Sdk.Utilities.TaskRunner/ICallbackInvoker, MatchSolitaire.Android")]
			void OnComplete (global::Java.Lang.Object result);

		}

		[global::Android.Runtime.Register ("com/gameanalytics/sdk/utilities/TaskRunner$Callback", DoNotGenerateAcw=true)]
		internal partial class ICallbackInvoker : global::Java.Lang.Object, ICallback {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/gameanalytics/sdk/utilities/TaskRunner$Callback", typeof (ICallbackInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static ICallback GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<ICallback> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.gameanalytics.sdk.utilities.TaskRunner.Callback'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public ICallbackInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_onComplete_Ljava_lang_Object_;
#pragma warning disable 0169
			static Delegate GetOnComplete_Ljava_lang_Object_Handler ()
			{
				if (cb_onComplete_Ljava_lang_Object_ == null)
					cb_onComplete_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnComplete_Ljava_lang_Object_));
				return cb_onComplete_Ljava_lang_Object_;
			}

			static void n_OnComplete_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_result)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.GameAnalytics.Sdk.Utilities.TaskRunner.ICallback> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var result = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_result, JniHandleOwnership.DoNotTransfer);
				__this.OnComplete (result);
			}
#pragma warning restore 0169

			IntPtr id_onComplete_Ljava_lang_Object_;
			public unsafe void OnComplete (global::Java.Lang.Object result)
			{
				if (id_onComplete_Ljava_lang_Object_ == IntPtr.Zero)
					id_onComplete_Ljava_lang_Object_ = JNIEnv.GetMethodID (class_ref, "onComplete", "(Ljava/lang/Object;)V");
				IntPtr native_result = JNIEnv.ToLocalJniHandle (result);
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (native_result);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onComplete_Ljava_lang_Object_, __args);
				JNIEnv.DeleteLocalRef (native_result);
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/gameanalytics/sdk/utilities/TaskRunner", typeof (TaskRunner));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal TaskRunner (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='TaskRunner']/constructor[@name='TaskRunner' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe TaskRunner () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.utilities']/class[@name='TaskRunner']/method[@name='executeAsync' and count(parameter)=2 and parameter[1][@type='java.util.concurrent.Callable&lt;R&gt;'] and parameter[2][@type='com.gameanalytics.sdk.utilities.TaskRunner.Callback&lt;R&gt;']]"
		[Register ("executeAsync", "(Ljava/util/concurrent/Callable;Lcom/gameanalytics/sdk/utilities/TaskRunner$Callback;)V", "")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"R"})]
		public static unsafe void ExecuteAsync (global::Java.Util.Concurrent.ICallable callable, global::Com.GameAnalytics.Sdk.Utilities.TaskRunner.ICallback @callback)
		{
			const string __id = "executeAsync.(Ljava/util/concurrent/Callable;Lcom/gameanalytics/sdk/utilities/TaskRunner$Callback;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((callable == null) ? IntPtr.Zero : ((global::Java.Lang.Object) callable).Handle);
				__args [1] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (callable);
				global::System.GC.KeepAlive (@callback);
			}
		}

	}
}
