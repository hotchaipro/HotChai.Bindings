//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.GameAnalytics.Sdk.Events {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']"
	[global::Android.Runtime.Register ("com/gameanalytics/sdk/events/GAEvents", DoNotGenerateAcw=true)]
	public partial class GAEvents : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/field[@name='isSdkInitEventEnabled']"
		[Register ("isSdkInitEventEnabled")]
		public static bool IsSdkInitEventEnabled {
			get {
				const string __id = "isSdkInitEventEnabled.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "isSdkInitEventEnabled.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/gameanalytics/sdk/events/GAEvents", typeof (GAEvents));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected GAEvents (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addAdEvent' and count(parameter)=9 and parameter[1][@type='com.gameanalytics.sdk.GAAdAction'] and parameter[2][@type='com.gameanalytics.sdk.GAAdType'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='com.gameanalytics.sdk.GAAdError'] and parameter[6][@type='long'] and parameter[7][@type='boolean'] and parameter[8][@type='java.util.Map&lt;java.lang.String, java.lang.Object&gt;'] and parameter[9][@type='boolean']]"
		[Register ("addAdEvent", "(Lcom/gameanalytics/sdk/GAAdAction;Lcom/gameanalytics/sdk/GAAdType;Ljava/lang/String;Ljava/lang/String;Lcom/gameanalytics/sdk/GAAdError;JZLjava/util/Map;Z)V", "")]
		public static unsafe void AddAdEvent (global::Com.GameAnalytics.Sdk.GAAdAction adAction, global::Com.GameAnalytics.Sdk.GAAdType adType, string adSdkName, string adPlacement, global::Com.GameAnalytics.Sdk.GAAdError noAdReason, long duration, bool sendDuration, global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> fields, bool mergeFields)
		{
			const string __id = "addAdEvent.(Lcom/gameanalytics/sdk/GAAdAction;Lcom/gameanalytics/sdk/GAAdType;Ljava/lang/String;Ljava/lang/String;Lcom/gameanalytics/sdk/GAAdError;JZLjava/util/Map;Z)V";
			IntPtr native_adSdkName = JNIEnv.NewString ((string)adSdkName);
			IntPtr native_adPlacement = JNIEnv.NewString ((string)adPlacement);
			IntPtr native_fields = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (fields);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [9];
				__args [0] = new JniArgumentValue ((adAction == null) ? IntPtr.Zero : ((global::Java.Lang.Object) adAction).Handle);
				__args [1] = new JniArgumentValue ((adType == null) ? IntPtr.Zero : ((global::Java.Lang.Object) adType).Handle);
				__args [2] = new JniArgumentValue (native_adSdkName);
				__args [3] = new JniArgumentValue (native_adPlacement);
				__args [4] = new JniArgumentValue ((noAdReason == null) ? IntPtr.Zero : ((global::Java.Lang.Object) noAdReason).Handle);
				__args [5] = new JniArgumentValue (duration);
				__args [6] = new JniArgumentValue (sendDuration);
				__args [7] = new JniArgumentValue (native_fields);
				__args [8] = new JniArgumentValue (mergeFields);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_adSdkName);
				JNIEnv.DeleteLocalRef (native_adPlacement);
				JNIEnv.DeleteLocalRef (native_fields);
				global::System.GC.KeepAlive (adAction);
				global::System.GC.KeepAlive (adType);
				global::System.GC.KeepAlive (noAdReason);
				global::System.GC.KeepAlive (fields);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addBusinessEvent' and count(parameter)=10 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='java.lang.String'] and parameter[8][@type='java.lang.String'] and parameter[9][@type='java.util.Map&lt;java.lang.String, java.lang.Object&gt;'] and parameter[10][@type='boolean']]"
		[Register ("addBusinessEvent", "(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Z)V", "")]
		public static unsafe void AddBusinessEvent (string currency, int amount, string itemType, string itemId, string cartType, string receipt, string store, string signature, global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> fields, bool mergeFields)
		{
			const string __id = "addBusinessEvent.(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Z)V";
			IntPtr native_currency = JNIEnv.NewString ((string)currency);
			IntPtr native_itemType = JNIEnv.NewString ((string)itemType);
			IntPtr native_itemId = JNIEnv.NewString ((string)itemId);
			IntPtr native_cartType = JNIEnv.NewString ((string)cartType);
			IntPtr native_receipt = JNIEnv.NewString ((string)receipt);
			IntPtr native_store = JNIEnv.NewString ((string)store);
			IntPtr native_signature = JNIEnv.NewString ((string)signature);
			IntPtr native_fields = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (fields);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [10];
				__args [0] = new JniArgumentValue (native_currency);
				__args [1] = new JniArgumentValue (amount);
				__args [2] = new JniArgumentValue (native_itemType);
				__args [3] = new JniArgumentValue (native_itemId);
				__args [4] = new JniArgumentValue (native_cartType);
				__args [5] = new JniArgumentValue (native_receipt);
				__args [6] = new JniArgumentValue (native_store);
				__args [7] = new JniArgumentValue (native_signature);
				__args [8] = new JniArgumentValue (native_fields);
				__args [9] = new JniArgumentValue (mergeFields);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_currency);
				JNIEnv.DeleteLocalRef (native_itemType);
				JNIEnv.DeleteLocalRef (native_itemId);
				JNIEnv.DeleteLocalRef (native_cartType);
				JNIEnv.DeleteLocalRef (native_receipt);
				JNIEnv.DeleteLocalRef (native_store);
				JNIEnv.DeleteLocalRef (native_signature);
				JNIEnv.DeleteLocalRef (native_fields);
				global::System.GC.KeepAlive (fields);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addDesignEvent' and count(parameter)=5 and parameter[1][@type='java.lang.String'] and parameter[2][@type='double'] and parameter[3][@type='boolean'] and parameter[4][@type='java.util.Map&lt;java.lang.String, java.lang.Object&gt;'] and parameter[5][@type='boolean']]"
		[Register ("addDesignEvent", "(Ljava/lang/String;DZLjava/util/Map;Z)V", "")]
		public static unsafe void AddDesignEvent (string eventId, double value, bool sendValue, global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> fields, bool mergeFields)
		{
			const string __id = "addDesignEvent.(Ljava/lang/String;DZLjava/util/Map;Z)V";
			IntPtr native_eventId = JNIEnv.NewString ((string)eventId);
			IntPtr native_fields = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (fields);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_eventId);
				__args [1] = new JniArgumentValue (value);
				__args [2] = new JniArgumentValue (sendValue);
				__args [3] = new JniArgumentValue (native_fields);
				__args [4] = new JniArgumentValue (mergeFields);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_eventId);
				JNIEnv.DeleteLocalRef (native_fields);
				global::System.GC.KeepAlive (fields);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addDimensionsToEvent' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]"
		[Register ("addDimensionsToEvent", "(Lorg/json/JSONObject;)V", "")]
		public static unsafe void AddDimensionsToEvent (global::Org.Json.JSONObject eventData)
		{
			const string __id = "addDimensionsToEvent.(Lorg/json/JSONObject;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((eventData == null) ? IntPtr.Zero : ((global::Java.Lang.Object) eventData).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (eventData);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addErrorEvent' and count(parameter)=8 and parameter[1][@type='com.gameanalytics.sdk.GAErrorSeverity'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.Map&lt;java.lang.String, java.lang.Object&gt;'] and parameter[4][@type='boolean'] and parameter[5][@type='boolean'] and parameter[6][@type='java.lang.String'] and parameter[7][@type='int'] and parameter[8][@type='java.lang.String']]"
		[Register ("addErrorEvent", "(Lcom/gameanalytics/sdk/GAErrorSeverity;Ljava/lang/String;Ljava/util/Map;ZZLjava/lang/String;ILjava/lang/String;)V", "")]
		public static unsafe void AddErrorEvent (global::Com.GameAnalytics.Sdk.GAErrorSeverity severity, string message, global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> fields, bool mergeFields, bool skipAddingFields, string method, int line, string module)
		{
			const string __id = "addErrorEvent.(Lcom/gameanalytics/sdk/GAErrorSeverity;Ljava/lang/String;Ljava/util/Map;ZZLjava/lang/String;ILjava/lang/String;)V";
			IntPtr native_message = JNIEnv.NewString ((string)message);
			IntPtr native_fields = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (fields);
			IntPtr native_method = JNIEnv.NewString ((string)method);
			IntPtr native_module = JNIEnv.NewString ((string)module);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [8];
				__args [0] = new JniArgumentValue ((severity == null) ? IntPtr.Zero : ((global::Java.Lang.Object) severity).Handle);
				__args [1] = new JniArgumentValue (native_message);
				__args [2] = new JniArgumentValue (native_fields);
				__args [3] = new JniArgumentValue (mergeFields);
				__args [4] = new JniArgumentValue (skipAddingFields);
				__args [5] = new JniArgumentValue (native_method);
				__args [6] = new JniArgumentValue (line);
				__args [7] = new JniArgumentValue (native_module);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_message);
				JNIEnv.DeleteLocalRef (native_fields);
				JNIEnv.DeleteLocalRef (native_method);
				JNIEnv.DeleteLocalRef (native_module);
				global::System.GC.KeepAlive (severity);
				global::System.GC.KeepAlive (fields);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addErrorEvent' and count(parameter)=7 and parameter[1][@type='com.gameanalytics.sdk.GAErrorSeverity'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.Map&lt;java.lang.String, java.lang.Object&gt;'] and parameter[4][@type='boolean'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='int'] and parameter[7][@type='java.lang.String']]"
		[Register ("addErrorEvent", "(Lcom/gameanalytics/sdk/GAErrorSeverity;Ljava/lang/String;Ljava/util/Map;ZLjava/lang/String;ILjava/lang/String;)V", "")]
		public static unsafe void AddErrorEvent (global::Com.GameAnalytics.Sdk.GAErrorSeverity severity, string message, global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> fields, bool mergeFields, string method, int line, string module)
		{
			const string __id = "addErrorEvent.(Lcom/gameanalytics/sdk/GAErrorSeverity;Ljava/lang/String;Ljava/util/Map;ZLjava/lang/String;ILjava/lang/String;)V";
			IntPtr native_message = JNIEnv.NewString ((string)message);
			IntPtr native_fields = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (fields);
			IntPtr native_method = JNIEnv.NewString ((string)method);
			IntPtr native_module = JNIEnv.NewString ((string)module);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue ((severity == null) ? IntPtr.Zero : ((global::Java.Lang.Object) severity).Handle);
				__args [1] = new JniArgumentValue (native_message);
				__args [2] = new JniArgumentValue (native_fields);
				__args [3] = new JniArgumentValue (mergeFields);
				__args [4] = new JniArgumentValue (native_method);
				__args [5] = new JniArgumentValue (line);
				__args [6] = new JniArgumentValue (native_module);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_message);
				JNIEnv.DeleteLocalRef (native_fields);
				JNIEnv.DeleteLocalRef (native_method);
				JNIEnv.DeleteLocalRef (native_module);
				global::System.GC.KeepAlive (severity);
				global::System.GC.KeepAlive (fields);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addHealthEvent' and count(parameter)=2 and parameter[1][@type='long[]'] and parameter[2][@type='boolean']]"
		[Register ("addHealthEvent", "([JZ)V", "")]
		public static unsafe void AddHealthEvent (long[] frameData, bool errorFlag)
		{
			const string __id = "addHealthEvent.([JZ)V";
			IntPtr native_frameData = JNIEnv.NewArray (frameData);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_frameData);
				__args [1] = new JniArgumentValue (errorFlag);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (frameData != null) {
					JNIEnv.CopyArray (native_frameData, frameData);
					JNIEnv.DeleteLocalRef (native_frameData);
				}
				global::System.GC.KeepAlive (frameData);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addImpressionEvent' and count(parameter)=5 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='org.json.JSONObject'] and parameter[4][@type='java.util.Map&lt;java.lang.String, java.lang.Object&gt;'] and parameter[5][@type='boolean']]"
		[Register ("addImpressionEvent", "(Ljava/lang/String;Ljava/lang/String;Lorg/json/JSONObject;Ljava/util/Map;Z)V", "")]
		public static unsafe void AddImpressionEvent (string adNetworkName, string adNetworkVersion, global::Org.Json.JSONObject impressionData, global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> fields, bool mergeFields)
		{
			const string __id = "addImpressionEvent.(Ljava/lang/String;Ljava/lang/String;Lorg/json/JSONObject;Ljava/util/Map;Z)V";
			IntPtr native_adNetworkName = JNIEnv.NewString ((string)adNetworkName);
			IntPtr native_adNetworkVersion = JNIEnv.NewString ((string)adNetworkVersion);
			IntPtr native_fields = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (fields);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue (native_adNetworkName);
				__args [1] = new JniArgumentValue (native_adNetworkVersion);
				__args [2] = new JniArgumentValue ((impressionData == null) ? IntPtr.Zero : ((global::Java.Lang.Object) impressionData).Handle);
				__args [3] = new JniArgumentValue (native_fields);
				__args [4] = new JniArgumentValue (mergeFields);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_adNetworkName);
				JNIEnv.DeleteLocalRef (native_adNetworkVersion);
				JNIEnv.DeleteLocalRef (native_fields);
				global::System.GC.KeepAlive (impressionData);
				global::System.GC.KeepAlive (fields);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addProgressionEvent' and count(parameter)=8 and parameter[1][@type='com.gameanalytics.sdk.GAProgressionStatus'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='int'] and parameter[6][@type='boolean'] and parameter[7][@type='java.util.Map&lt;java.lang.String, java.lang.Object&gt;'] and parameter[8][@type='boolean']]"
		[Register ("addProgressionEvent", "(Lcom/gameanalytics/sdk/GAProgressionStatus;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZLjava/util/Map;Z)V", "")]
		public static unsafe void AddProgressionEvent (global::Com.GameAnalytics.Sdk.GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score, bool sendScore, global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> fields, bool mergeFields)
		{
			const string __id = "addProgressionEvent.(Lcom/gameanalytics/sdk/GAProgressionStatus;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZLjava/util/Map;Z)V";
			IntPtr native_progression01 = JNIEnv.NewString ((string)progression01);
			IntPtr native_progression02 = JNIEnv.NewString ((string)progression02);
			IntPtr native_progression03 = JNIEnv.NewString ((string)progression03);
			IntPtr native_fields = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (fields);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [8];
				__args [0] = new JniArgumentValue ((progressionStatus == null) ? IntPtr.Zero : ((global::Java.Lang.Object) progressionStatus).Handle);
				__args [1] = new JniArgumentValue (native_progression01);
				__args [2] = new JniArgumentValue (native_progression02);
				__args [3] = new JniArgumentValue (native_progression03);
				__args [4] = new JniArgumentValue (score);
				__args [5] = new JniArgumentValue (sendScore);
				__args [6] = new JniArgumentValue (native_fields);
				__args [7] = new JniArgumentValue (mergeFields);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_progression01);
				JNIEnv.DeleteLocalRef (native_progression02);
				JNIEnv.DeleteLocalRef (native_progression03);
				JNIEnv.DeleteLocalRef (native_fields);
				global::System.GC.KeepAlive (progressionStatus);
				global::System.GC.KeepAlive (fields);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addResourceEvent' and count(parameter)=7 and parameter[1][@type='com.gameanalytics.sdk.GAResourceFlowType'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='double'] and parameter[4][@type='java.lang.String'] and parameter[5][@type='java.lang.String'] and parameter[6][@type='java.util.Map&lt;java.lang.String, java.lang.Object&gt;'] and parameter[7][@type='boolean']]"
		[Register ("addResourceEvent", "(Lcom/gameanalytics/sdk/GAResourceFlowType;Ljava/lang/String;DLjava/lang/String;Ljava/lang/String;Ljava/util/Map;Z)V", "")]
		public static unsafe void AddResourceEvent (global::Com.GameAnalytics.Sdk.GAResourceFlowType flowType, string currency, double amount, string itemType, string itemId, global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> fields, bool mergeFields)
		{
			const string __id = "addResourceEvent.(Lcom/gameanalytics/sdk/GAResourceFlowType;Ljava/lang/String;DLjava/lang/String;Ljava/lang/String;Ljava/util/Map;Z)V";
			IntPtr native_currency = JNIEnv.NewString ((string)currency);
			IntPtr native_itemType = JNIEnv.NewString ((string)itemType);
			IntPtr native_itemId = JNIEnv.NewString ((string)itemId);
			IntPtr native_fields = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (fields);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [7];
				__args [0] = new JniArgumentValue ((flowType == null) ? IntPtr.Zero : ((global::Java.Lang.Object) flowType).Handle);
				__args [1] = new JniArgumentValue (native_currency);
				__args [2] = new JniArgumentValue (amount);
				__args [3] = new JniArgumentValue (native_itemType);
				__args [4] = new JniArgumentValue (native_itemId);
				__args [5] = new JniArgumentValue (native_fields);
				__args [6] = new JniArgumentValue (mergeFields);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_currency);
				JNIEnv.DeleteLocalRef (native_itemType);
				JNIEnv.DeleteLocalRef (native_itemId);
				JNIEnv.DeleteLocalRef (native_fields);
				global::System.GC.KeepAlive (flowType);
				global::System.GC.KeepAlive (fields);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addSdkInitEvent' and count(parameter)=0]"
		[Register ("addSdkInitEvent", "()V", "")]
		public static unsafe void AddSdkInitEvent ()
		{
			const string __id = "addSdkInitEvent.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addSessionEndEvent' and count(parameter)=0]"
		[Register ("addSessionEndEvent", "()V", "")]
		public static unsafe void AddSessionEndEvent ()
		{
			const string __id = "addSessionEndEvent.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='addSessionStartEvent' and count(parameter)=0]"
		[Register ("addSessionStartEvent", "()V", "")]
		public static unsafe void AddSessionStartEvent ()
		{
			const string __id = "addSessionStartEvent.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='cleanupEvents' and count(parameter)=0]"
		[Register ("cleanupEvents", "()V", "")]
		public static unsafe void CleanupEvents ()
		{
			const string __id = "cleanupEvents.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='ensureEventQueueIsRunning' and count(parameter)=0]"
		[Register ("ensureEventQueueIsRunning", "()V", "")]
		public static unsafe void EnsureEventQueueIsRunning ()
		{
			const string __id = "ensureEventQueueIsRunning.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='fixMissingSessionEndEvents' and count(parameter)=0]"
		[Register ("fixMissingSessionEndEvents", "()V", "")]
		public static unsafe void FixMissingSessionEndEvents ()
		{
			const string __id = "fixMissingSessionEndEvents.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='processEvents' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]"
		[Register ("processEvents", "(Ljava/lang/String;Z)V", "")]
		public static unsafe void ProcessEvents (string category, bool performCleanup)
		{
			const string __id = "processEvents.(Ljava/lang/String;Z)V";
			IntPtr native_category = JNIEnv.NewString ((string)category);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_category);
				__args [1] = new JniArgumentValue (performCleanup);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_category);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.gameanalytics.sdk.events']/class[@name='GAEvents']/method[@name='stopEventQueue' and count(parameter)=0]"
		[Register ("stopEventQueue", "()V", "")]
		public static unsafe void StopEventQueue ()
		{
			const string __id = "stopEventQueue.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

	}
}
