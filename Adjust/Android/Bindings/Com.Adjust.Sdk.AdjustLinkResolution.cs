//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Adjust.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustLinkResolution']"
	[global::Android.Runtime.Register ("com/adjust/sdk/AdjustLinkResolution", DoNotGenerateAcw=true)]
	public sealed partial class AdjustLinkResolution : global::Java.Lang.Object {
		// Metadata.xml XPath interface reference: path="/api/package[@name='com.adjust.sdk']/interface[@name='AdjustLinkResolution.AdjustLinkResolutionCallback']"
		[Register ("com/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback", "", "Com.Adjust.Sdk.AdjustLinkResolution/IAdjustLinkResolutionCallbackInvoker")]
		public partial interface IAdjustLinkResolutionCallback : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/interface[@name='AdjustLinkResolution.AdjustLinkResolutionCallback']/method[@name='resolvedLinkCallback' and count(parameter)=1 and parameter[1][@type='android.net.Uri']]"
			[Register ("resolvedLinkCallback", "(Landroid/net/Uri;)V", "GetResolvedLinkCallback_Landroid_net_Uri_Handler:Com.Adjust.Sdk.AdjustLinkResolution/IAdjustLinkResolutionCallbackInvoker, MatchBlocks.Android")]
			void ResolvedLinkCallback (global::Android.Net.Uri p0);

		}

		[global::Android.Runtime.Register ("com/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback", DoNotGenerateAcw=true)]
		internal partial class IAdjustLinkResolutionCallbackInvoker : global::Java.Lang.Object, IAdjustLinkResolutionCallback {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback", typeof (IAdjustLinkResolutionCallbackInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IAdjustLinkResolutionCallback GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IAdjustLinkResolutionCallback> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.adjust.sdk.AdjustLinkResolution.AdjustLinkResolutionCallback'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IAdjustLinkResolutionCallbackInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_resolvedLinkCallback_Landroid_net_Uri_;
#pragma warning disable 0169
			static Delegate GetResolvedLinkCallback_Landroid_net_Uri_Handler ()
			{
				if (cb_resolvedLinkCallback_Landroid_net_Uri_ == null)
					cb_resolvedLinkCallback_Landroid_net_Uri_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ResolvedLinkCallback_Landroid_net_Uri_));
				return cb_resolvedLinkCallback_Landroid_net_Uri_;
			}

			static void n_ResolvedLinkCallback_Landroid_net_Uri_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustLinkResolution.IAdjustLinkResolutionCallback> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var p0 = global::Java.Lang.Object.GetObject<global::Android.Net.Uri> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.ResolvedLinkCallback (p0);
			}
#pragma warning restore 0169

			IntPtr id_resolvedLinkCallback_Landroid_net_Uri_;
			public unsafe void ResolvedLinkCallback (global::Android.Net.Uri p0)
			{
				if (id_resolvedLinkCallback_Landroid_net_Uri_ == IntPtr.Zero)
					id_resolvedLinkCallback_Landroid_net_Uri_ = JNIEnv.GetMethodID (class_ref, "resolvedLinkCallback", "(Landroid/net/Uri;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_resolvedLinkCallback_Landroid_net_Uri_, __args);
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/AdjustLinkResolution", typeof (AdjustLinkResolution));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal AdjustLinkResolution (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustLinkResolution']/method[@name='resolveLink' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String[]'] and parameter[3][@type='com.adjust.sdk.AdjustLinkResolution.AdjustLinkResolutionCallback']]"
		[Register ("resolveLink", "(Ljava/lang/String;[Ljava/lang/String;Lcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;)V", "")]
		public static unsafe void ResolveLink (string p0, string[] p1, global::Com.Adjust.Sdk.AdjustLinkResolution.IAdjustLinkResolutionCallback p2)
		{
			const string __id = "resolveLink.(Ljava/lang/String;[Ljava/lang/String;Lcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
				global::System.GC.KeepAlive (p2);
			}
		}

	}
}
