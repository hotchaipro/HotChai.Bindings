//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Adjust.Sdk.Network {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.adjust.sdk.network']/class[@name='UtilNetworking']"
	[global::Android.Runtime.Register ("com/adjust/sdk/network/UtilNetworking", DoNotGenerateAcw=true)]
	public partial class UtilNetworking : global::Java.Lang.Object {
		// Metadata.xml XPath interface reference: path="/api/package[@name='com.adjust.sdk.network']/interface[@name='UtilNetworking.IConnectionOptions']"
		[Register ("com/adjust/sdk/network/UtilNetworking$IConnectionOptions", "", "Com.Adjust.Sdk.Network.UtilNetworking/IConnectionOptionsInvoker")]
		public partial interface IConnectionOptions : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk.network']/interface[@name='UtilNetworking.IConnectionOptions']/method[@name='applyConnectionOptions' and count(parameter)=2 and parameter[1][@type='javax.net.ssl.HttpsURLConnection'] and parameter[2][@type='java.lang.String']]"
			[Register ("applyConnectionOptions", "(Ljavax/net/ssl/HttpsURLConnection;Ljava/lang/String;)V", "GetApplyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_Handler:Com.Adjust.Sdk.Network.UtilNetworking/IConnectionOptionsInvoker, MatchBlocks.Android")]
			void ApplyConnectionOptions (global::Javax.Net.Ssl.HttpsURLConnection p0, string p1);

		}

		[global::Android.Runtime.Register ("com/adjust/sdk/network/UtilNetworking$IConnectionOptions", DoNotGenerateAcw=true)]
		internal partial class IConnectionOptionsInvoker : global::Java.Lang.Object, IConnectionOptions {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/network/UtilNetworking$IConnectionOptions", typeof (IConnectionOptionsInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IConnectionOptions GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IConnectionOptions> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.adjust.sdk.network.UtilNetworking.IConnectionOptions'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IConnectionOptionsInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_applyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetApplyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_Handler ()
			{
				if (cb_applyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_ == null)
					cb_applyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_ApplyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_));
				return cb_applyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_;
			}

			static void n_ApplyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.Network.UtilNetworking.IConnectionOptions> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var p0 = global::Java.Lang.Object.GetObject<global::Javax.Net.Ssl.HttpsURLConnection> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
				__this.ApplyConnectionOptions (p0, p1);
			}
#pragma warning restore 0169

			IntPtr id_applyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_;
			public unsafe void ApplyConnectionOptions (global::Javax.Net.Ssl.HttpsURLConnection p0, string p1)
			{
				if (id_applyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_ == IntPtr.Zero)
					id_applyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "applyConnectionOptions", "(Ljavax/net/ssl/HttpsURLConnection;Ljava/lang/String;)V");
				IntPtr native_p1 = JNIEnv.NewString ((string)p1);
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue (native_p1);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_applyConnectionOptions_Ljavax_net_ssl_HttpsURLConnection_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p1);
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.adjust.sdk.network']/interface[@name='UtilNetworking.IHttpsURLConnectionProvider']"
		[Register ("com/adjust/sdk/network/UtilNetworking$IHttpsURLConnectionProvider", "", "Com.Adjust.Sdk.Network.UtilNetworking/IHttpsURLConnectionProviderInvoker")]
		public partial interface IHttpsURLConnectionProvider : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk.network']/interface[@name='UtilNetworking.IHttpsURLConnectionProvider']/method[@name='generateHttpsURLConnection' and count(parameter)=1 and parameter[1][@type='java.net.URL']]"
			[Register ("generateHttpsURLConnection", "(Ljava/net/URL;)Ljavax/net/ssl/HttpsURLConnection;", "GetGenerateHttpsURLConnection_Ljava_net_URL_Handler:Com.Adjust.Sdk.Network.UtilNetworking/IHttpsURLConnectionProviderInvoker, MatchBlocks.Android")]
			global::Javax.Net.Ssl.HttpsURLConnection GenerateHttpsURLConnection (global::Java.Net.URL p0);

		}

		[global::Android.Runtime.Register ("com/adjust/sdk/network/UtilNetworking$IHttpsURLConnectionProvider", DoNotGenerateAcw=true)]
		internal partial class IHttpsURLConnectionProviderInvoker : global::Java.Lang.Object, IHttpsURLConnectionProvider {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/network/UtilNetworking$IHttpsURLConnectionProvider", typeof (IHttpsURLConnectionProviderInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IHttpsURLConnectionProvider GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IHttpsURLConnectionProvider> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.adjust.sdk.network.UtilNetworking.IHttpsURLConnectionProvider'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IHttpsURLConnectionProviderInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_generateHttpsURLConnection_Ljava_net_URL_;
#pragma warning disable 0169
			static Delegate GetGenerateHttpsURLConnection_Ljava_net_URL_Handler ()
			{
				if (cb_generateHttpsURLConnection_Ljava_net_URL_ == null)
					cb_generateHttpsURLConnection_Ljava_net_URL_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_GenerateHttpsURLConnection_Ljava_net_URL_));
				return cb_generateHttpsURLConnection_Ljava_net_URL_;
			}

			static IntPtr n_GenerateHttpsURLConnection_Ljava_net_URL_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.Network.UtilNetworking.IHttpsURLConnectionProvider> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var p0 = global::Java.Lang.Object.GetObject<global::Java.Net.URL> (native_p0, JniHandleOwnership.DoNotTransfer);
				IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GenerateHttpsURLConnection (p0));
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_generateHttpsURLConnection_Ljava_net_URL_;
			public unsafe global::Javax.Net.Ssl.HttpsURLConnection GenerateHttpsURLConnection (global::Java.Net.URL p0)
			{
				if (id_generateHttpsURLConnection_Ljava_net_URL_ == IntPtr.Zero)
					id_generateHttpsURLConnection_Ljava_net_URL_ = JNIEnv.GetMethodID (class_ref, "generateHttpsURLConnection", "(Ljava/net/URL;)Ljavax/net/ssl/HttpsURLConnection;");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __ret = global::Java.Lang.Object.GetObject<global::Javax.Net.Ssl.HttpsURLConnection> (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_generateHttpsURLConnection_Ljava_net_URL_, __args), JniHandleOwnership.TransferLocalRef);
				return __ret;
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/network/UtilNetworking", typeof (UtilNetworking));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected UtilNetworking (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.adjust.sdk.network']/class[@name='UtilNetworking']/constructor[@name='UtilNetworking' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe UtilNetworking () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk.network']/class[@name='UtilNetworking']/method[@name='createDefaultConnectionOptions' and count(parameter)=0]"
		[Register ("createDefaultConnectionOptions", "()Lcom/adjust/sdk/network/UtilNetworking$IConnectionOptions;", "")]
		public static unsafe global::Com.Adjust.Sdk.Network.UtilNetworking.IConnectionOptions CreateDefaultConnectionOptions ()
		{
			const string __id = "createDefaultConnectionOptions.()Lcom/adjust/sdk/network/UtilNetworking$IConnectionOptions;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.Network.UtilNetworking.IConnectionOptions> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk.network']/class[@name='UtilNetworking']/method[@name='createDefaultHttpsURLConnectionProvider' and count(parameter)=0]"
		[Register ("createDefaultHttpsURLConnectionProvider", "()Lcom/adjust/sdk/network/UtilNetworking$IHttpsURLConnectionProvider;", "")]
		public static unsafe global::Com.Adjust.Sdk.Network.UtilNetworking.IHttpsURLConnectionProvider CreateDefaultHttpsURLConnectionProvider ()
		{
			const string __id = "createDefaultHttpsURLConnectionProvider.()Lcom/adjust/sdk/network/UtilNetworking$IHttpsURLConnectionProvider;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.Network.UtilNetworking.IHttpsURLConnectionProvider> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk.network']/class[@name='UtilNetworking']/method[@name='extractJsonInt' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='java.lang.String']]"
		[Register ("extractJsonInt", "(Lorg/json/JSONObject;Ljava/lang/String;)I", "")]
		public static unsafe int ExtractJsonInt (global::Org.Json.JSONObject p0, string p1)
		{
			const string __id = "extractJsonInt.(Lorg/json/JSONObject;Ljava/lang/String;)I";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk.network']/class[@name='UtilNetworking']/method[@name='extractJsonLong' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='java.lang.String']]"
		[Register ("extractJsonLong", "(Lorg/json/JSONObject;Ljava/lang/String;)Ljava/lang/Long;", "")]
		public static unsafe global::Java.Lang.Long ExtractJsonLong (global::Org.Json.JSONObject p0, string p1)
		{
			const string __id = "extractJsonLong.(Lorg/json/JSONObject;Ljava/lang/String;)Ljava/lang/Long;";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Long> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk.network']/class[@name='UtilNetworking']/method[@name='extractJsonString' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='java.lang.String']]"
		[Register ("extractJsonString", "(Lorg/json/JSONObject;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string ExtractJsonString (global::Org.Json.JSONObject p0, string p1)
		{
			const string __id = "extractJsonString.(Lorg/json/JSONObject;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk.network']/class[@name='UtilNetworking']/method[@name='setUserAgent' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setUserAgent", "(Ljava/lang/String;)V", "")]
		public static unsafe void SetUserAgent (string p0)
		{
			const string __id = "setUserAgent.(Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

	}
}
