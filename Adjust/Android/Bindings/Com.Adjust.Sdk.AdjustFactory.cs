//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Adjust.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']"
	[global::Android.Runtime.Register ("com/adjust/sdk/AdjustFactory", DoNotGenerateAcw=true)]
	public partial class AdjustFactory : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory.URLGetConnection']"
		[global::Android.Runtime.Register ("com/adjust/sdk/AdjustFactory$URLGetConnection", DoNotGenerateAcw=true)]
		public partial class URLGetConnection : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/AdjustFactory$URLGetConnection", typeof (URLGetConnection));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected URLGetConnection (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory.URLGetConnection']/constructor[@name='AdjustFactory.URLGetConnection' and count(parameter)=2 and parameter[1][@type='javax.net.ssl.HttpsURLConnection'] and parameter[2][@type='java.net.URL']]"
			[Register (".ctor", "(Ljavax/net/ssl/HttpsURLConnection;Ljava/net/URL;)V", "")]
			public unsafe URLGetConnection (global::Javax.Net.Ssl.HttpsURLConnection p0, global::Java.Net.URL p1) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "(Ljavax/net/ssl/HttpsURLConnection;Ljava/net/URL;)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
					__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (p0);
					global::System.GC.KeepAlive (p1);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/AdjustFactory", typeof (AdjustFactory));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected AdjustFactory (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/constructor[@name='AdjustFactory' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe AdjustFactory () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe string BaseUrl {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getBaseUrl' and count(parameter)=0]"
			[Register ("getBaseUrl", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getBaseUrl.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setBaseUrl' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setBaseUrl", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setBaseUrl.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe global::Com.Adjust.Sdk.Network.UtilNetworking.IConnectionOptions ConnectionOptions {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getConnectionOptions' and count(parameter)=0]"
			[Register ("getConnectionOptions", "()Lcom/adjust/sdk/network/UtilNetworking$IConnectionOptions;", "")]
			get {
				const string __id = "getConnectionOptions.()Lcom/adjust/sdk/network/UtilNetworking$IConnectionOptions;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.Network.UtilNetworking.IConnectionOptions> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setConnectionOptions' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.network.UtilNetworking.IConnectionOptions']]"
			[Register ("setConnectionOptions", "(Lcom/adjust/sdk/network/UtilNetworking$IConnectionOptions;)V", "")]
			set {
				const string __id = "setConnectionOptions.(Lcom/adjust/sdk/network/UtilNetworking$IConnectionOptions;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public static unsafe string GdprUrl {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getGdprUrl' and count(parameter)=0]"
			[Register ("getGdprUrl", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getGdprUrl.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setGdprUrl' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setGdprUrl", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setGdprUrl.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe global::Com.Adjust.Sdk.Network.UtilNetworking.IHttpsURLConnectionProvider HttpsURLConnectionProvider {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getHttpsURLConnectionProvider' and count(parameter)=0]"
			[Register ("getHttpsURLConnectionProvider", "()Lcom/adjust/sdk/network/UtilNetworking$IHttpsURLConnectionProvider;", "")]
			get {
				const string __id = "getHttpsURLConnectionProvider.()Lcom/adjust/sdk/network/UtilNetworking$IHttpsURLConnectionProvider;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.Network.UtilNetworking.IHttpsURLConnectionProvider> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setHttpsURLConnectionProvider' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.network.UtilNetworking.IHttpsURLConnectionProvider']]"
			[Register ("setHttpsURLConnectionProvider", "(Lcom/adjust/sdk/network/UtilNetworking$IHttpsURLConnectionProvider;)V", "")]
			set {
				const string __id = "setHttpsURLConnectionProvider.(Lcom/adjust/sdk/network/UtilNetworking$IHttpsURLConnectionProvider;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public static unsafe global::Com.Adjust.Sdk.BackoffStrategy InstallSessionBackoffStrategy {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getInstallSessionBackoffStrategy' and count(parameter)=0]"
			[Register ("getInstallSessionBackoffStrategy", "()Lcom/adjust/sdk/BackoffStrategy;", "")]
			get {
				const string __id = "getInstallSessionBackoffStrategy.()Lcom/adjust/sdk/BackoffStrategy;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.BackoffStrategy> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe global::Com.Adjust.Sdk.ILogger Logger {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getLogger' and count(parameter)=0]"
			[Register ("getLogger", "()Lcom/adjust/sdk/ILogger;", "")]
			get {
				const string __id = "getLogger.()Lcom/adjust/sdk/ILogger;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.ILogger> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setLogger' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.ILogger']]"
			[Register ("setLogger", "(Lcom/adjust/sdk/ILogger;)V", "")]
			set {
				const string __id = "setLogger.(Lcom/adjust/sdk/ILogger;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public static unsafe long MaxDelayStart {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getMaxDelayStart' and count(parameter)=0]"
			[Register ("getMaxDelayStart", "()J", "")]
			get {
				const string __id = "getMaxDelayStart.()J";
				try {
					var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe global::Com.Adjust.Sdk.BackoffStrategy PackageHandlerBackoffStrategy {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getPackageHandlerBackoffStrategy' and count(parameter)=0]"
			[Register ("getPackageHandlerBackoffStrategy", "()Lcom/adjust/sdk/BackoffStrategy;", "")]
			get {
				const string __id = "getPackageHandlerBackoffStrategy.()Lcom/adjust/sdk/BackoffStrategy;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.BackoffStrategy> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setPackageHandlerBackoffStrategy' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.BackoffStrategy']]"
			[Register ("setPackageHandlerBackoffStrategy", "(Lcom/adjust/sdk/BackoffStrategy;)V", "")]
			set {
				const string __id = "setPackageHandlerBackoffStrategy.(Lcom/adjust/sdk/BackoffStrategy;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public static unsafe string PurchaseVerificationUrl {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getPurchaseVerificationUrl' and count(parameter)=0]"
			[Register ("getPurchaseVerificationUrl", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getPurchaseVerificationUrl.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setPurchaseVerificationUrl' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setPurchaseVerificationUrl", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setPurchaseVerificationUrl.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe global::Com.Adjust.Sdk.BackoffStrategy SdkClickBackoffStrategy {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getSdkClickBackoffStrategy' and count(parameter)=0]"
			[Register ("getSdkClickBackoffStrategy", "()Lcom/adjust/sdk/BackoffStrategy;", "")]
			get {
				const string __id = "getSdkClickBackoffStrategy.()Lcom/adjust/sdk/BackoffStrategy;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.BackoffStrategy> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setSdkClickBackoffStrategy' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.BackoffStrategy']]"
			[Register ("setSdkClickBackoffStrategy", "(Lcom/adjust/sdk/BackoffStrategy;)V", "")]
			set {
				const string __id = "setSdkClickBackoffStrategy.(Lcom/adjust/sdk/BackoffStrategy;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public static unsafe long SessionInterval {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getSessionInterval' and count(parameter)=0]"
			[Register ("getSessionInterval", "()J", "")]
			get {
				const string __id = "getSessionInterval.()J";
				try {
					var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setSessionInterval' and count(parameter)=1 and parameter[1][@type='long']]"
			[Register ("setSessionInterval", "(J)V", "")]
			set {
				const string __id = "setSessionInterval.(J)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		public static unsafe string SubscriptionUrl {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getSubscriptionUrl' and count(parameter)=0]"
			[Register ("getSubscriptionUrl", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getSubscriptionUrl.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setSubscriptionUrl' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setSubscriptionUrl", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setSubscriptionUrl.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe long SubsessionInterval {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getSubsessionInterval' and count(parameter)=0]"
			[Register ("getSubsessionInterval", "()J", "")]
			get {
				const string __id = "getSubsessionInterval.()J";
				try {
					var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setSubsessionInterval' and count(parameter)=1 and parameter[1][@type='long']]"
			[Register ("setSubsessionInterval", "(J)V", "")]
			set {
				const string __id = "setSubsessionInterval.(J)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		public static unsafe long TimerInterval {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getTimerInterval' and count(parameter)=0]"
			[Register ("getTimerInterval", "()J", "")]
			get {
				const string __id = "getTimerInterval.()J";
				try {
					var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setTimerInterval' and count(parameter)=1 and parameter[1][@type='long']]"
			[Register ("setTimerInterval", "(J)V", "")]
			set {
				const string __id = "setTimerInterval.(J)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		public static unsafe long TimerStart {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getTimerStart' and count(parameter)=0]"
			[Register ("getTimerStart", "()J", "")]
			get {
				const string __id = "getTimerStart.()J";
				try {
					var __rm = _members.StaticMethods.InvokeInt64Method (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setTimerStart' and count(parameter)=1 and parameter[1][@type='long']]"
			[Register ("setTimerStart", "(J)V", "")]
			set {
				const string __id = "setTimerStart.(J)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		public static unsafe bool TryInstallReferrer {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getTryInstallReferrer' and count(parameter)=0]"
			[Register ("getTryInstallReferrer", "()Z", "")]
			get {
				const string __id = "getTryInstallReferrer.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setTryInstallReferrer' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setTryInstallReferrer", "(Z)V", "")]
			set {
				const string __id = "setTryInstallReferrer.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='disableSigning' and count(parameter)=0]"
		[Register ("disableSigning", "()V", "")]
		public static unsafe void DisableSigning ()
		{
			const string __id = "disableSigning.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='enableSigning' and count(parameter)=0]"
		[Register ("enableSigning", "()V", "")]
		public static unsafe void EnableSigning ()
		{
			const string __id = "enableSigning.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getActivityHandler' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.AdjustConfig']]"
		[Register ("getActivityHandler", "(Lcom/adjust/sdk/AdjustConfig;)Lcom/adjust/sdk/IActivityHandler;", "")]
		public static unsafe global::Com.Adjust.Sdk.IActivityHandler GetActivityHandler (global::Com.Adjust.Sdk.AdjustConfig p0)
		{
			const string __id = "getActivityHandler.(Lcom/adjust/sdk/AdjustConfig;)Lcom/adjust/sdk/IActivityHandler;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.IActivityHandler> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getAttributionHandler' and count(parameter)=3 and parameter[1][@type='com.adjust.sdk.IActivityHandler'] and parameter[2][@type='boolean'] and parameter[3][@type='com.adjust.sdk.network.IActivityPackageSender']]"
		[Register ("getAttributionHandler", "(Lcom/adjust/sdk/IActivityHandler;ZLcom/adjust/sdk/network/IActivityPackageSender;)Lcom/adjust/sdk/IAttributionHandler;", "")]
		public static unsafe global::Com.Adjust.Sdk.IAttributionHandler GetAttributionHandler (global::Com.Adjust.Sdk.IActivityHandler p0, bool p1, global::Com.Adjust.Sdk.Network.IActivityPackageSender p2)
		{
			const string __id = "getAttributionHandler.(Lcom/adjust/sdk/IActivityHandler;ZLcom/adjust/sdk/network/IActivityPackageSender;)Lcom/adjust/sdk/IAttributionHandler;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.IAttributionHandler> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getPackageHandler' and count(parameter)=4 and parameter[1][@type='com.adjust.sdk.IActivityHandler'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='boolean'] and parameter[4][@type='com.adjust.sdk.network.IActivityPackageSender']]"
		[Register ("getPackageHandler", "(Lcom/adjust/sdk/IActivityHandler;Landroid/content/Context;ZLcom/adjust/sdk/network/IActivityPackageSender;)Lcom/adjust/sdk/IPackageHandler;", "")]
		public static unsafe global::Com.Adjust.Sdk.IPackageHandler GetPackageHandler (global::Com.Adjust.Sdk.IActivityHandler p0, global::Android.Content.Context p1, bool p2, global::Com.Adjust.Sdk.Network.IActivityPackageSender p3)
		{
			const string __id = "getPackageHandler.(Lcom/adjust/sdk/IActivityHandler;Landroid/content/Context;ZLcom/adjust/sdk/network/IActivityPackageSender;)Lcom/adjust/sdk/IPackageHandler;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.IPackageHandler> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
				global::System.GC.KeepAlive (p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getPurchaseVerificationHandler' and count(parameter)=3 and parameter[1][@type='com.adjust.sdk.IActivityHandler'] and parameter[2][@type='boolean'] and parameter[3][@type='com.adjust.sdk.network.IActivityPackageSender']]"
		[Register ("getPurchaseVerificationHandler", "(Lcom/adjust/sdk/IActivityHandler;ZLcom/adjust/sdk/network/IActivityPackageSender;)Lcom/adjust/sdk/IPurchaseVerificationHandler;", "")]
		public static unsafe global::Com.Adjust.Sdk.IPurchaseVerificationHandler GetPurchaseVerificationHandler (global::Com.Adjust.Sdk.IActivityHandler p0, bool p1, global::Com.Adjust.Sdk.Network.IActivityPackageSender p2)
		{
			const string __id = "getPurchaseVerificationHandler.(Lcom/adjust/sdk/IActivityHandler;ZLcom/adjust/sdk/network/IActivityPackageSender;)Lcom/adjust/sdk/IPurchaseVerificationHandler;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.IPurchaseVerificationHandler> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='getSdkClickHandler' and count(parameter)=3 and parameter[1][@type='com.adjust.sdk.IActivityHandler'] and parameter[2][@type='boolean'] and parameter[3][@type='com.adjust.sdk.network.IActivityPackageSender']]"
		[Register ("getSdkClickHandler", "(Lcom/adjust/sdk/IActivityHandler;ZLcom/adjust/sdk/network/IActivityPackageSender;)Lcom/adjust/sdk/ISdkClickHandler;", "")]
		public static unsafe global::Com.Adjust.Sdk.ISdkClickHandler GetSdkClickHandler (global::Com.Adjust.Sdk.IActivityHandler p0, bool p1, global::Com.Adjust.Sdk.Network.IActivityPackageSender p2)
		{
			const string __id = "getSdkClickHandler.(Lcom/adjust/sdk/IActivityHandler;ZLcom/adjust/sdk/network/IActivityPackageSender;)Lcom/adjust/sdk/ISdkClickHandler;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.ISdkClickHandler> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setActivityHandler' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.IActivityHandler']]"
		[Register ("setActivityHandler", "(Lcom/adjust/sdk/IActivityHandler;)V", "")]
		public static unsafe void SetActivityHandler (global::Com.Adjust.Sdk.IActivityHandler p0)
		{
			const string __id = "setActivityHandler.(Lcom/adjust/sdk/IActivityHandler;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setAttributionHandler' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.IAttributionHandler']]"
		[Register ("setAttributionHandler", "(Lcom/adjust/sdk/IAttributionHandler;)V", "")]
		public static unsafe void SetAttributionHandler (global::Com.Adjust.Sdk.IAttributionHandler p0)
		{
			const string __id = "setAttributionHandler.(Lcom/adjust/sdk/IAttributionHandler;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setPackageHandler' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.IPackageHandler']]"
		[Register ("setPackageHandler", "(Lcom/adjust/sdk/IPackageHandler;)V", "")]
		public static unsafe void SetPackageHandler (global::Com.Adjust.Sdk.IPackageHandler p0)
		{
			const string __id = "setPackageHandler.(Lcom/adjust/sdk/IPackageHandler;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='setSdkClickHandler' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.ISdkClickHandler']]"
		[Register ("setSdkClickHandler", "(Lcom/adjust/sdk/ISdkClickHandler;)V", "")]
		public static unsafe void SetSdkClickHandler (global::Com.Adjust.Sdk.ISdkClickHandler p0)
		{
			const string __id = "setSdkClickHandler.(Lcom/adjust/sdk/ISdkClickHandler;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustFactory']/method[@name='teardown' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("teardown", "(Landroid/content/Context;)V", "")]
		public static unsafe void Teardown (global::Android.Content.Context p0)
		{
			const string __id = "teardown.(Landroid/content/Context;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

	}
}
