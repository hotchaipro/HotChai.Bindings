//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Adjust.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']"
	[global::Android.Runtime.Register ("com/adjust/sdk/AdjustInstance", DoNotGenerateAcw=true)]
	public partial class AdjustInstance : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance.PreLaunchActions']"
		[global::Android.Runtime.Register ("com/adjust/sdk/AdjustInstance$PreLaunchActions", DoNotGenerateAcw=true)]
		public partial class PreLaunchActions : global::Java.Lang.Object {

			// Metadata.xml XPath field reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance.PreLaunchActions']/field[@name='lastMeasurementConsentTracked']"
			[Register ("lastMeasurementConsentTracked")]
			public global::Java.Lang.Boolean LastMeasurementConsentTracked {
				get {
					const string __id = "lastMeasurementConsentTracked.Ljava/lang/Boolean;";

					var __v = _members.InstanceFields.GetObjectValue (__id, this);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Boolean> (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
				set {
					const string __id = "lastMeasurementConsentTracked.Ljava/lang/Boolean;";

					IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
					try {
						_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
					} finally {
						global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance.PreLaunchActions']/field[@name='preLaunchActionsArray']"
			[Register ("preLaunchActionsArray")]
			public global::System.Collections.IList PreLaunchActionsArray {
				get {
					const string __id = "preLaunchActionsArray.Ljava/util/List;";

					var __v = _members.InstanceFields.GetObjectValue (__id, this);
					return global::Android.Runtime.JavaList.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
				set {
					const string __id = "preLaunchActionsArray.Ljava/util/List;";

					IntPtr native_value = global::Android.Runtime.JavaList.ToLocalJniHandle (value);
					try {
						_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
					} finally {
						JNIEnv.DeleteLocalRef (native_value);
					}
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance.PreLaunchActions']/field[@name='preLaunchAdjustThirdPartySharingArray']"
			[Register ("preLaunchAdjustThirdPartySharingArray")]
			public global::System.Collections.IList PreLaunchAdjustThirdPartySharingArray {
				get {
					const string __id = "preLaunchAdjustThirdPartySharingArray.Ljava/util/List;";

					var __v = _members.InstanceFields.GetObjectValue (__id, this);
					return global::Android.Runtime.JavaList.FromJniHandle (__v.Handle, JniHandleOwnership.TransferLocalRef);
				}
				set {
					const string __id = "preLaunchAdjustThirdPartySharingArray.Ljava/util/List;";

					IntPtr native_value = global::Android.Runtime.JavaList.ToLocalJniHandle (value);
					try {
						_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
					} finally {
						JNIEnv.DeleteLocalRef (native_value);
					}
				}
			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/AdjustInstance$PreLaunchActions", typeof (PreLaunchActions));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected PreLaunchActions (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance.PreLaunchActions']/constructor[@name='AdjustInstance.PreLaunchActions' and count(parameter)=0]"
			[Register (".ctor", "()V", "")]
			public unsafe PreLaunchActions () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, null);
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/AdjustInstance", typeof (AdjustInstance));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected AdjustInstance (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/constructor[@name='AdjustInstance' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe AdjustInstance () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_getAdid;
#pragma warning disable 0169
		static Delegate GetGetAdidHandler ()
		{
			if (cb_getAdid == null)
				cb_getAdid = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAdid));
			return cb_getAdid;
		}

		static IntPtr n_GetAdid (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.Adid);
		}
#pragma warning restore 0169

		public virtual unsafe string Adid {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='getAdid' and count(parameter)=0]"
			[Register ("getAdid", "()Ljava/lang/String;", "GetGetAdidHandler")]
			get {
				const string __id = "getAdid.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getAttribution;
#pragma warning disable 0169
		static Delegate GetGetAttributionHandler ()
		{
			if (cb_getAttribution == null)
				cb_getAttribution = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAttribution));
			return cb_getAttribution;
		}

		static IntPtr n_GetAttribution (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.Attribution);
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Adjust.Sdk.AdjustAttribution Attribution {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='getAttribution' and count(parameter)=0]"
			[Register ("getAttribution", "()Lcom/adjust/sdk/AdjustAttribution;", "GetGetAttributionHandler")]
			get {
				const string __id = "getAttribution.()Lcom/adjust/sdk/AdjustAttribution;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustAttribution> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_isEnabled;
#pragma warning disable 0169
		static Delegate GetIsEnabledHandler ()
		{
			if (cb_isEnabled == null)
				cb_isEnabled = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsEnabled));
			return cb_isEnabled;
		}

		static bool n_IsEnabled (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Enabled;
		}
#pragma warning restore 0169

		static Delegate cb_setEnabled_Z;
#pragma warning disable 0169
		static Delegate GetSetEnabled_ZHandler ()
		{
			if (cb_setEnabled_Z == null)
				cb_setEnabled_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetEnabled_Z));
			return cb_setEnabled_Z;
		}

		static void n_SetEnabled_Z (IntPtr jnienv, IntPtr native__this, bool p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Enabled = p0;
		}
#pragma warning restore 0169

		public virtual unsafe bool Enabled {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='isEnabled' and count(parameter)=0]"
			[Register ("isEnabled", "()Z", "GetIsEnabledHandler")]
			get {
				const string __id = "isEnabled.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='setEnabled' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")]
			set {
				const string __id = "setEnabled.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getSdkVersion;
#pragma warning disable 0169
		static Delegate GetGetSdkVersionHandler ()
		{
			if (cb_getSdkVersion == null)
				cb_getSdkVersion = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetSdkVersion));
			return cb_getSdkVersion;
		}

		static IntPtr n_GetSdkVersion (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.SdkVersion);
		}
#pragma warning restore 0169

		public virtual unsafe string SdkVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='getSdkVersion' and count(parameter)=0]"
			[Register ("getSdkVersion", "()Ljava/lang/String;", "GetGetSdkVersionHandler")]
			get {
				const string __id = "getSdkVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_addSessionCallbackParameter_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetAddSessionCallbackParameter_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_addSessionCallbackParameter_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_addSessionCallbackParameter_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_AddSessionCallbackParameter_Ljava_lang_String_Ljava_lang_String_));
			return cb_addSessionCallbackParameter_Ljava_lang_String_Ljava_lang_String_;
		}

		static void n_AddSessionCallbackParameter_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.AddSessionCallbackParameter (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='addSessionCallbackParameter' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("addSessionCallbackParameter", "(Ljava/lang/String;Ljava/lang/String;)V", "GetAddSessionCallbackParameter_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe void AddSessionCallbackParameter (string p0, string p1)
		{
			const string __id = "addSessionCallbackParameter.(Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate cb_addSessionPartnerParameter_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetAddSessionPartnerParameter_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_addSessionPartnerParameter_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_addSessionPartnerParameter_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_AddSessionPartnerParameter_Ljava_lang_String_Ljava_lang_String_));
			return cb_addSessionPartnerParameter_Ljava_lang_String_Ljava_lang_String_;
		}

		static void n_AddSessionPartnerParameter_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.AddSessionPartnerParameter (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='addSessionPartnerParameter' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("addSessionPartnerParameter", "(Ljava/lang/String;Ljava/lang/String;)V", "GetAddSessionPartnerParameter_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe void AddSessionPartnerParameter (string p0, string p1)
		{
			const string __id = "addSessionPartnerParameter.(Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		static Delegate cb_appWillOpenUrl_Landroid_net_Uri_;
#pragma warning disable 0169
		static Delegate GetAppWillOpenUrl_Landroid_net_Uri_Handler ()
		{
			if (cb_appWillOpenUrl_Landroid_net_Uri_ == null)
				cb_appWillOpenUrl_Landroid_net_Uri_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AppWillOpenUrl_Landroid_net_Uri_));
			return cb_appWillOpenUrl_Landroid_net_Uri_;
		}

		static void n_AppWillOpenUrl_Landroid_net_Uri_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Android.Net.Uri> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.AppWillOpenUrl (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='appWillOpenUrl' and count(parameter)=1 and parameter[1][@type='android.net.Uri']]"
		[Register ("appWillOpenUrl", "(Landroid/net/Uri;)V", "GetAppWillOpenUrl_Landroid_net_Uri_Handler")]
		public virtual unsafe void AppWillOpenUrl (global::Android.Net.Uri p0)
		{
			const string __id = "appWillOpenUrl.(Landroid/net/Uri;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate cb_appWillOpenUrl_Landroid_net_Uri_Landroid_content_Context_;
#pragma warning disable 0169
		static Delegate GetAppWillOpenUrl_Landroid_net_Uri_Landroid_content_Context_Handler ()
		{
			if (cb_appWillOpenUrl_Landroid_net_Uri_Landroid_content_Context_ == null)
				cb_appWillOpenUrl_Landroid_net_Uri_Landroid_content_Context_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_AppWillOpenUrl_Landroid_net_Uri_Landroid_content_Context_));
			return cb_appWillOpenUrl_Landroid_net_Uri_Landroid_content_Context_;
		}

		static void n_AppWillOpenUrl_Landroid_net_Uri_Landroid_content_Context_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Android.Net.Uri> (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.AppWillOpenUrl (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='appWillOpenUrl' and count(parameter)=2 and parameter[1][@type='android.net.Uri'] and parameter[2][@type='android.content.Context']]"
		[Register ("appWillOpenUrl", "(Landroid/net/Uri;Landroid/content/Context;)V", "GetAppWillOpenUrl_Landroid_net_Uri_Landroid_content_Context_Handler")]
		public virtual unsafe void AppWillOpenUrl (global::Android.Net.Uri p0, global::Android.Content.Context p1)
		{
			const string __id = "appWillOpenUrl.(Landroid/net/Uri;Landroid/content/Context;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate cb_disableThirdPartySharing_Landroid_content_Context_;
#pragma warning disable 0169
		static Delegate GetDisableThirdPartySharing_Landroid_content_Context_Handler ()
		{
			if (cb_disableThirdPartySharing_Landroid_content_Context_ == null)
				cb_disableThirdPartySharing_Landroid_content_Context_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_DisableThirdPartySharing_Landroid_content_Context_));
			return cb_disableThirdPartySharing_Landroid_content_Context_;
		}

		static void n_DisableThirdPartySharing_Landroid_content_Context_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.DisableThirdPartySharing (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='disableThirdPartySharing' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("disableThirdPartySharing", "(Landroid/content/Context;)V", "GetDisableThirdPartySharing_Landroid_content_Context_Handler")]
		public virtual unsafe void DisableThirdPartySharing (global::Android.Content.Context p0)
		{
			const string __id = "disableThirdPartySharing.(Landroid/content/Context;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate cb_gdprForgetMe_Landroid_content_Context_;
#pragma warning disable 0169
		static Delegate GetGdprForgetMe_Landroid_content_Context_Handler ()
		{
			if (cb_gdprForgetMe_Landroid_content_Context_ == null)
				cb_gdprForgetMe_Landroid_content_Context_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_GdprForgetMe_Landroid_content_Context_));
			return cb_gdprForgetMe_Landroid_content_Context_;
		}

		static void n_GdprForgetMe_Landroid_content_Context_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.GdprForgetMe (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='gdprForgetMe' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("gdprForgetMe", "(Landroid/content/Context;)V", "GetGdprForgetMe_Landroid_content_Context_Handler")]
		public virtual unsafe void GdprForgetMe (global::Android.Content.Context p0)
		{
			const string __id = "gdprForgetMe.(Landroid/content/Context;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate cb_onCreate_Lcom_adjust_sdk_AdjustConfig_;
#pragma warning disable 0169
		static Delegate GetOnCreate_Lcom_adjust_sdk_AdjustConfig_Handler ()
		{
			if (cb_onCreate_Lcom_adjust_sdk_AdjustConfig_ == null)
				cb_onCreate_Lcom_adjust_sdk_AdjustConfig_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnCreate_Lcom_adjust_sdk_AdjustConfig_));
			return cb_onCreate_Lcom_adjust_sdk_AdjustConfig_;
		}

		static void n_OnCreate_Lcom_adjust_sdk_AdjustConfig_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustConfig> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.OnCreate (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='onCreate' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.AdjustConfig']]"
		[Register ("onCreate", "(Lcom/adjust/sdk/AdjustConfig;)V", "GetOnCreate_Lcom_adjust_sdk_AdjustConfig_Handler")]
		public virtual unsafe void OnCreate (global::Com.Adjust.Sdk.AdjustConfig p0)
		{
			const string __id = "onCreate.(Lcom/adjust/sdk/AdjustConfig;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate cb_onPause;
#pragma warning disable 0169
		static Delegate GetOnPauseHandler ()
		{
			if (cb_onPause == null)
				cb_onPause = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnPause));
			return cb_onPause;
		}

		static void n_OnPause (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.OnPause ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='onPause' and count(parameter)=0]"
		[Register ("onPause", "()V", "GetOnPauseHandler")]
		public virtual unsafe void OnPause ()
		{
			const string __id = "onPause.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_onResume;
#pragma warning disable 0169
		static Delegate GetOnResumeHandler ()
		{
			if (cb_onResume == null)
				cb_onResume = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnResume));
			return cb_onResume;
		}

		static void n_OnResume (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.OnResume ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='onResume' and count(parameter)=0]"
		[Register ("onResume", "()V", "GetOnResumeHandler")]
		public virtual unsafe void OnResume ()
		{
			const string __id = "onResume.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_processDeeplink_Landroid_net_Uri_Landroid_content_Context_Lcom_adjust_sdk_OnDeeplinkResolvedListener_;
#pragma warning disable 0169
		static Delegate GetProcessDeeplink_Landroid_net_Uri_Landroid_content_Context_Lcom_adjust_sdk_OnDeeplinkResolvedListener_Handler ()
		{
			if (cb_processDeeplink_Landroid_net_Uri_Landroid_content_Context_Lcom_adjust_sdk_OnDeeplinkResolvedListener_ == null)
				cb_processDeeplink_Landroid_net_Uri_Landroid_content_Context_Lcom_adjust_sdk_OnDeeplinkResolvedListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_V (n_ProcessDeeplink_Landroid_net_Uri_Landroid_content_Context_Lcom_adjust_sdk_OnDeeplinkResolvedListener_));
			return cb_processDeeplink_Landroid_net_Uri_Landroid_content_Context_Lcom_adjust_sdk_OnDeeplinkResolvedListener_;
		}

		static void n_ProcessDeeplink_Landroid_net_Uri_Landroid_content_Context_Lcom_adjust_sdk_OnDeeplinkResolvedListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Android.Net.Uri> (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_p1, JniHandleOwnership.DoNotTransfer);
			var p2 = (global::Com.Adjust.Sdk.IOnDeeplinkResolvedListener)global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.IOnDeeplinkResolvedListener> (native_p2, JniHandleOwnership.DoNotTransfer);
			__this.ProcessDeeplink (p0, p1, p2);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='processDeeplink' and count(parameter)=3 and parameter[1][@type='android.net.Uri'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='com.adjust.sdk.OnDeeplinkResolvedListener']]"
		[Register ("processDeeplink", "(Landroid/net/Uri;Landroid/content/Context;Lcom/adjust/sdk/OnDeeplinkResolvedListener;)V", "GetProcessDeeplink_Landroid_net_Uri_Landroid_content_Context_Lcom_adjust_sdk_OnDeeplinkResolvedListener_Handler")]
		public virtual unsafe void ProcessDeeplink (global::Android.Net.Uri p0, global::Android.Content.Context p1, global::Com.Adjust.Sdk.IOnDeeplinkResolvedListener p2)
		{
			const string __id = "processDeeplink.(Landroid/net/Uri;Landroid/content/Context;Lcom/adjust/sdk/OnDeeplinkResolvedListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
				global::System.GC.KeepAlive (p2);
			}
		}

		static Delegate cb_removeSessionCallbackParameter_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetRemoveSessionCallbackParameter_Ljava_lang_String_Handler ()
		{
			if (cb_removeSessionCallbackParameter_Ljava_lang_String_ == null)
				cb_removeSessionCallbackParameter_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_RemoveSessionCallbackParameter_Ljava_lang_String_));
			return cb_removeSessionCallbackParameter_Ljava_lang_String_;
		}

		static void n_RemoveSessionCallbackParameter_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.RemoveSessionCallbackParameter (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='removeSessionCallbackParameter' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("removeSessionCallbackParameter", "(Ljava/lang/String;)V", "GetRemoveSessionCallbackParameter_Ljava_lang_String_Handler")]
		public virtual unsafe void RemoveSessionCallbackParameter (string p0)
		{
			const string __id = "removeSessionCallbackParameter.(Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		static Delegate cb_removeSessionPartnerParameter_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetRemoveSessionPartnerParameter_Ljava_lang_String_Handler ()
		{
			if (cb_removeSessionPartnerParameter_Ljava_lang_String_ == null)
				cb_removeSessionPartnerParameter_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_RemoveSessionPartnerParameter_Ljava_lang_String_));
			return cb_removeSessionPartnerParameter_Ljava_lang_String_;
		}

		static void n_RemoveSessionPartnerParameter_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.RemoveSessionPartnerParameter (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='removeSessionPartnerParameter' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("removeSessionPartnerParameter", "(Ljava/lang/String;)V", "GetRemoveSessionPartnerParameter_Ljava_lang_String_Handler")]
		public virtual unsafe void RemoveSessionPartnerParameter (string p0)
		{
			const string __id = "removeSessionPartnerParameter.(Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		static Delegate cb_resetSessionCallbackParameters;
#pragma warning disable 0169
		static Delegate GetResetSessionCallbackParametersHandler ()
		{
			if (cb_resetSessionCallbackParameters == null)
				cb_resetSessionCallbackParameters = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ResetSessionCallbackParameters));
			return cb_resetSessionCallbackParameters;
		}

		static void n_ResetSessionCallbackParameters (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ResetSessionCallbackParameters ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='resetSessionCallbackParameters' and count(parameter)=0]"
		[Register ("resetSessionCallbackParameters", "()V", "GetResetSessionCallbackParametersHandler")]
		public virtual unsafe void ResetSessionCallbackParameters ()
		{
			const string __id = "resetSessionCallbackParameters.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_resetSessionPartnerParameters;
#pragma warning disable 0169
		static Delegate GetResetSessionPartnerParametersHandler ()
		{
			if (cb_resetSessionPartnerParameters == null)
				cb_resetSessionPartnerParameters = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ResetSessionPartnerParameters));
			return cb_resetSessionPartnerParameters;
		}

		static void n_ResetSessionPartnerParameters (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.ResetSessionPartnerParameters ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='resetSessionPartnerParameters' and count(parameter)=0]"
		[Register ("resetSessionPartnerParameters", "()V", "GetResetSessionPartnerParametersHandler")]
		public virtual unsafe void ResetSessionPartnerParameters ()
		{
			const string __id = "resetSessionPartnerParameters.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_sendFirstPackages;
#pragma warning disable 0169
		static Delegate GetSendFirstPackagesHandler ()
		{
			if (cb_sendFirstPackages == null)
				cb_sendFirstPackages = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_SendFirstPackages));
			return cb_sendFirstPackages;
		}

		static void n_SendFirstPackages (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SendFirstPackages ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='sendFirstPackages' and count(parameter)=0]"
		[Register ("sendFirstPackages", "()V", "GetSendFirstPackagesHandler")]
		public virtual unsafe void SendFirstPackages ()
		{
			const string __id = "sendFirstPackages.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_sendPreinstallReferrer_Ljava_lang_String_Landroid_content_Context_;
#pragma warning disable 0169
		static Delegate GetSendPreinstallReferrer_Ljava_lang_String_Landroid_content_Context_Handler ()
		{
			if (cb_sendPreinstallReferrer_Ljava_lang_String_Landroid_content_Context_ == null)
				cb_sendPreinstallReferrer_Ljava_lang_String_Landroid_content_Context_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_SendPreinstallReferrer_Ljava_lang_String_Landroid_content_Context_));
			return cb_sendPreinstallReferrer_Ljava_lang_String_Landroid_content_Context_;
		}

		static void n_SendPreinstallReferrer_Ljava_lang_String_Landroid_content_Context_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.SendPreinstallReferrer (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='sendPreinstallReferrer' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='android.content.Context']]"
		[Register ("sendPreinstallReferrer", "(Ljava/lang/String;Landroid/content/Context;)V", "GetSendPreinstallReferrer_Ljava_lang_String_Landroid_content_Context_Handler")]
		public virtual unsafe void SendPreinstallReferrer (string p0, global::Android.Content.Context p1)
		{
			const string __id = "sendPreinstallReferrer.(Ljava/lang/String;Landroid/content/Context;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate cb_sendReferrer_Ljava_lang_String_Landroid_content_Context_;
#pragma warning disable 0169
		static Delegate GetSendReferrer_Ljava_lang_String_Landroid_content_Context_Handler ()
		{
			if (cb_sendReferrer_Ljava_lang_String_Landroid_content_Context_ == null)
				cb_sendReferrer_Ljava_lang_String_Landroid_content_Context_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_SendReferrer_Ljava_lang_String_Landroid_content_Context_));
			return cb_sendReferrer_Ljava_lang_String_Landroid_content_Context_;
		}

		static void n_SendReferrer_Ljava_lang_String_Landroid_content_Context_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.SendReferrer (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='sendReferrer' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='android.content.Context']]"
		[Register ("sendReferrer", "(Ljava/lang/String;Landroid/content/Context;)V", "GetSendReferrer_Ljava_lang_String_Landroid_content_Context_Handler")]
		public virtual unsafe void SendReferrer (string p0, global::Android.Content.Context p1)
		{
			const string __id = "sendReferrer.(Ljava/lang/String;Landroid/content/Context;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate cb_setOfflineMode_Z;
#pragma warning disable 0169
		static Delegate GetSetOfflineMode_ZHandler ()
		{
			if (cb_setOfflineMode_Z == null)
				cb_setOfflineMode_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetOfflineMode_Z));
			return cb_setOfflineMode_Z;
		}

		static void n_SetOfflineMode_Z (IntPtr jnienv, IntPtr native__this, bool p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetOfflineMode (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='setOfflineMode' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setOfflineMode", "(Z)V", "GetSetOfflineMode_ZHandler")]
		public virtual unsafe void SetOfflineMode (bool p0)
		{
			const string __id = "setOfflineMode.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_setPushToken_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetPushToken_Ljava_lang_String_Handler ()
		{
			if (cb_setPushToken_Ljava_lang_String_ == null)
				cb_setPushToken_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetPushToken_Ljava_lang_String_));
			return cb_setPushToken_Ljava_lang_String_;
		}

		static void n_SetPushToken_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.SetPushToken (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='setPushToken' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setPushToken", "(Ljava/lang/String;)V", "GetSetPushToken_Ljava_lang_String_Handler")]
		public virtual unsafe void SetPushToken (string p0)
		{
			const string __id = "setPushToken.(Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		static Delegate cb_setPushToken_Ljava_lang_String_Landroid_content_Context_;
#pragma warning disable 0169
		static Delegate GetSetPushToken_Ljava_lang_String_Landroid_content_Context_Handler ()
		{
			if (cb_setPushToken_Ljava_lang_String_Landroid_content_Context_ == null)
				cb_setPushToken_Ljava_lang_String_Landroid_content_Context_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_SetPushToken_Ljava_lang_String_Landroid_content_Context_));
			return cb_setPushToken_Ljava_lang_String_Landroid_content_Context_;
		}

		static void n_SetPushToken_Ljava_lang_String_Landroid_content_Context_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Android.Content.Context> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.SetPushToken (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='setPushToken' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='android.content.Context']]"
		[Register ("setPushToken", "(Ljava/lang/String;Landroid/content/Context;)V", "GetSetPushToken_Ljava_lang_String_Landroid_content_Context_Handler")]
		public virtual unsafe void SetPushToken (string p0, global::Android.Content.Context p1)
		{
			const string __id = "setPushToken.(Ljava/lang/String;Landroid/content/Context;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate cb_setTestOptions_Lcom_adjust_sdk_AdjustTestOptions_;
#pragma warning disable 0169
		static Delegate GetSetTestOptions_Lcom_adjust_sdk_AdjustTestOptions_Handler ()
		{
			if (cb_setTestOptions_Lcom_adjust_sdk_AdjustTestOptions_ == null)
				cb_setTestOptions_Lcom_adjust_sdk_AdjustTestOptions_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetTestOptions_Lcom_adjust_sdk_AdjustTestOptions_));
			return cb_setTestOptions_Lcom_adjust_sdk_AdjustTestOptions_;
		}

		static void n_SetTestOptions_Lcom_adjust_sdk_AdjustTestOptions_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustTestOptions> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.SetTestOptions (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='setTestOptions' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.AdjustTestOptions']]"
		[Register ("setTestOptions", "(Lcom/adjust/sdk/AdjustTestOptions;)V", "GetSetTestOptions_Lcom_adjust_sdk_AdjustTestOptions_Handler")]
		public virtual unsafe void SetTestOptions (global::Com.Adjust.Sdk.AdjustTestOptions p0)
		{
			const string __id = "setTestOptions.(Lcom/adjust/sdk/AdjustTestOptions;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate cb_teardown;
#pragma warning disable 0169
		static Delegate GetTeardownHandler ()
		{
			if (cb_teardown == null)
				cb_teardown = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Teardown));
			return cb_teardown;
		}

		static void n_Teardown (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Teardown ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='teardown' and count(parameter)=0]"
		[Register ("teardown", "()V", "GetTeardownHandler")]
		public virtual unsafe void Teardown ()
		{
			const string __id = "teardown.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_trackAdRevenue_Lcom_adjust_sdk_AdjustAdRevenue_;
#pragma warning disable 0169
		static Delegate GetTrackAdRevenue_Lcom_adjust_sdk_AdjustAdRevenue_Handler ()
		{
			if (cb_trackAdRevenue_Lcom_adjust_sdk_AdjustAdRevenue_ == null)
				cb_trackAdRevenue_Lcom_adjust_sdk_AdjustAdRevenue_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_TrackAdRevenue_Lcom_adjust_sdk_AdjustAdRevenue_));
			return cb_trackAdRevenue_Lcom_adjust_sdk_AdjustAdRevenue_;
		}

		static void n_TrackAdRevenue_Lcom_adjust_sdk_AdjustAdRevenue_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustAdRevenue> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.TrackAdRevenue (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='trackAdRevenue' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.AdjustAdRevenue']]"
		[Register ("trackAdRevenue", "(Lcom/adjust/sdk/AdjustAdRevenue;)V", "GetTrackAdRevenue_Lcom_adjust_sdk_AdjustAdRevenue_Handler")]
		public virtual unsafe void TrackAdRevenue (global::Com.Adjust.Sdk.AdjustAdRevenue p0)
		{
			const string __id = "trackAdRevenue.(Lcom/adjust/sdk/AdjustAdRevenue;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate cb_trackAdRevenue_Ljava_lang_String_Lorg_json_JSONObject_;
#pragma warning disable 0169
		static Delegate GetTrackAdRevenue_Ljava_lang_String_Lorg_json_JSONObject_Handler ()
		{
			if (cb_trackAdRevenue_Ljava_lang_String_Lorg_json_JSONObject_ == null)
				cb_trackAdRevenue_Ljava_lang_String_Lorg_json_JSONObject_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_TrackAdRevenue_Ljava_lang_String_Lorg_json_JSONObject_));
			return cb_trackAdRevenue_Ljava_lang_String_Lorg_json_JSONObject_;
		}

		static void n_TrackAdRevenue_Ljava_lang_String_Lorg_json_JSONObject_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = global::Java.Lang.Object.GetObject<global::Org.Json.JSONObject> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.TrackAdRevenue (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='trackAdRevenue' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='org.json.JSONObject']]"
		[Register ("trackAdRevenue", "(Ljava/lang/String;Lorg/json/JSONObject;)V", "GetTrackAdRevenue_Ljava_lang_String_Lorg_json_JSONObject_Handler")]
		public virtual unsafe void TrackAdRevenue (string p0, global::Org.Json.JSONObject p1)
		{
			const string __id = "trackAdRevenue.(Ljava/lang/String;Lorg/json/JSONObject;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate cb_trackEvent_Lcom_adjust_sdk_AdjustEvent_;
#pragma warning disable 0169
		static Delegate GetTrackEvent_Lcom_adjust_sdk_AdjustEvent_Handler ()
		{
			if (cb_trackEvent_Lcom_adjust_sdk_AdjustEvent_ == null)
				cb_trackEvent_Lcom_adjust_sdk_AdjustEvent_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_TrackEvent_Lcom_adjust_sdk_AdjustEvent_));
			return cb_trackEvent_Lcom_adjust_sdk_AdjustEvent_;
		}

		static void n_TrackEvent_Lcom_adjust_sdk_AdjustEvent_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustEvent> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.TrackEvent (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='trackEvent' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.AdjustEvent']]"
		[Register ("trackEvent", "(Lcom/adjust/sdk/AdjustEvent;)V", "GetTrackEvent_Lcom_adjust_sdk_AdjustEvent_Handler")]
		public virtual unsafe void TrackEvent (global::Com.Adjust.Sdk.AdjustEvent p0)
		{
			const string __id = "trackEvent.(Lcom/adjust/sdk/AdjustEvent;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate cb_trackMeasurementConsent_Z;
#pragma warning disable 0169
		static Delegate GetTrackMeasurementConsent_ZHandler ()
		{
			if (cb_trackMeasurementConsent_Z == null)
				cb_trackMeasurementConsent_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_TrackMeasurementConsent_Z));
			return cb_trackMeasurementConsent_Z;
		}

		static void n_TrackMeasurementConsent_Z (IntPtr jnienv, IntPtr native__this, bool p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.TrackMeasurementConsent (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='trackMeasurementConsent' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("trackMeasurementConsent", "(Z)V", "GetTrackMeasurementConsent_ZHandler")]
		public virtual unsafe void TrackMeasurementConsent (bool p0)
		{
			const string __id = "trackMeasurementConsent.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_trackPlayStoreSubscription_Lcom_adjust_sdk_AdjustPlayStoreSubscription_;
#pragma warning disable 0169
		static Delegate GetTrackPlayStoreSubscription_Lcom_adjust_sdk_AdjustPlayStoreSubscription_Handler ()
		{
			if (cb_trackPlayStoreSubscription_Lcom_adjust_sdk_AdjustPlayStoreSubscription_ == null)
				cb_trackPlayStoreSubscription_Lcom_adjust_sdk_AdjustPlayStoreSubscription_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_TrackPlayStoreSubscription_Lcom_adjust_sdk_AdjustPlayStoreSubscription_));
			return cb_trackPlayStoreSubscription_Lcom_adjust_sdk_AdjustPlayStoreSubscription_;
		}

		static void n_TrackPlayStoreSubscription_Lcom_adjust_sdk_AdjustPlayStoreSubscription_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustPlayStoreSubscription> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.TrackPlayStoreSubscription (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='trackPlayStoreSubscription' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.AdjustPlayStoreSubscription']]"
		[Register ("trackPlayStoreSubscription", "(Lcom/adjust/sdk/AdjustPlayStoreSubscription;)V", "GetTrackPlayStoreSubscription_Lcom_adjust_sdk_AdjustPlayStoreSubscription_Handler")]
		public virtual unsafe void TrackPlayStoreSubscription (global::Com.Adjust.Sdk.AdjustPlayStoreSubscription p0)
		{
			const string __id = "trackPlayStoreSubscription.(Lcom/adjust/sdk/AdjustPlayStoreSubscription;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate cb_trackThirdPartySharing_Lcom_adjust_sdk_AdjustThirdPartySharing_;
#pragma warning disable 0169
		static Delegate GetTrackThirdPartySharing_Lcom_adjust_sdk_AdjustThirdPartySharing_Handler ()
		{
			if (cb_trackThirdPartySharing_Lcom_adjust_sdk_AdjustThirdPartySharing_ == null)
				cb_trackThirdPartySharing_Lcom_adjust_sdk_AdjustThirdPartySharing_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_TrackThirdPartySharing_Lcom_adjust_sdk_AdjustThirdPartySharing_));
			return cb_trackThirdPartySharing_Lcom_adjust_sdk_AdjustThirdPartySharing_;
		}

		static void n_TrackThirdPartySharing_Lcom_adjust_sdk_AdjustThirdPartySharing_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustThirdPartySharing> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.TrackThirdPartySharing (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='trackThirdPartySharing' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.AdjustThirdPartySharing']]"
		[Register ("trackThirdPartySharing", "(Lcom/adjust/sdk/AdjustThirdPartySharing;)V", "GetTrackThirdPartySharing_Lcom_adjust_sdk_AdjustThirdPartySharing_Handler")]
		public virtual unsafe void TrackThirdPartySharing (global::Com.Adjust.Sdk.AdjustThirdPartySharing p0)
		{
			const string __id = "trackThirdPartySharing.(Lcom/adjust/sdk/AdjustThirdPartySharing;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate cb_verifyPurchase_Lcom_adjust_sdk_AdjustPurchase_Lcom_adjust_sdk_OnPurchaseVerificationFinishedListener_;
#pragma warning disable 0169
		static Delegate GetVerifyPurchase_Lcom_adjust_sdk_AdjustPurchase_Lcom_adjust_sdk_OnPurchaseVerificationFinishedListener_Handler ()
		{
			if (cb_verifyPurchase_Lcom_adjust_sdk_AdjustPurchase_Lcom_adjust_sdk_OnPurchaseVerificationFinishedListener_ == null)
				cb_verifyPurchase_Lcom_adjust_sdk_AdjustPurchase_Lcom_adjust_sdk_OnPurchaseVerificationFinishedListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_VerifyPurchase_Lcom_adjust_sdk_AdjustPurchase_Lcom_adjust_sdk_OnPurchaseVerificationFinishedListener_));
			return cb_verifyPurchase_Lcom_adjust_sdk_AdjustPurchase_Lcom_adjust_sdk_OnPurchaseVerificationFinishedListener_;
		}

		static void n_VerifyPurchase_Lcom_adjust_sdk_AdjustPurchase_Lcom_adjust_sdk_OnPurchaseVerificationFinishedListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustInstance> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.AdjustPurchase> (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (global::Com.Adjust.Sdk.IOnPurchaseVerificationFinishedListener)global::Java.Lang.Object.GetObject<global::Com.Adjust.Sdk.IOnPurchaseVerificationFinishedListener> (native_p1, JniHandleOwnership.DoNotTransfer);
			__this.VerifyPurchase (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='AdjustInstance']/method[@name='verifyPurchase' and count(parameter)=2 and parameter[1][@type='com.adjust.sdk.AdjustPurchase'] and parameter[2][@type='com.adjust.sdk.OnPurchaseVerificationFinishedListener']]"
		[Register ("verifyPurchase", "(Lcom/adjust/sdk/AdjustPurchase;Lcom/adjust/sdk/OnPurchaseVerificationFinishedListener;)V", "GetVerifyPurchase_Lcom_adjust_sdk_AdjustPurchase_Lcom_adjust_sdk_OnPurchaseVerificationFinishedListener_Handler")]
		public virtual unsafe void VerifyPurchase (global::Com.Adjust.Sdk.AdjustPurchase p0, global::Com.Adjust.Sdk.IOnPurchaseVerificationFinishedListener p1)
		{
			const string __id = "verifyPurchase.(Lcom/adjust/sdk/AdjustPurchase;Lcom/adjust/sdk/OnPurchaseVerificationFinishedListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

	}
}
