//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Adjust.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']"
	[global::Android.Runtime.Register ("com/adjust/sdk/PreinstallUtil", DoNotGenerateAcw=true)]
	public partial class PreinstallUtil : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/PreinstallUtil", typeof (PreinstallUtil));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected PreinstallUtil (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/constructor[@name='PreinstallUtil' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe PreinstallUtil () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='getPayloadFromContentProviderDefault' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='com.adjust.sdk.ILogger']]"
		[Register ("getPayloadFromContentProviderDefault", "(Landroid/content/Context;Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;", "")]
		public static unsafe string GetPayloadFromContentProviderDefault (global::Android.Content.Context p0, string p1, global::Com.Adjust.Sdk.ILogger p2)
		{
			const string __id = "getPayloadFromContentProviderDefault.(Landroid/content/Context;Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='getPayloadFromFileSystem' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='com.adjust.sdk.ILogger']]"
		[Register ("getPayloadFromFileSystem", "(Ljava/lang/String;Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;", "")]
		public static unsafe string GetPayloadFromFileSystem (string p0, string p1, global::Com.Adjust.Sdk.ILogger p2)
		{
			const string __id = "getPayloadFromFileSystem.(Ljava/lang/String;Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='getPayloadFromSystemProperty' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='com.adjust.sdk.ILogger']]"
		[Register ("getPayloadFromSystemProperty", "(Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;", "")]
		public static unsafe string GetPayloadFromSystemProperty (string p0, global::Com.Adjust.Sdk.ILogger p1)
		{
			const string __id = "getPayloadFromSystemProperty.(Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='getPayloadFromSystemPropertyFilePath' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='com.adjust.sdk.ILogger']]"
		[Register ("getPayloadFromSystemPropertyFilePath", "(Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;", "")]
		public static unsafe string GetPayloadFromSystemPropertyFilePath (string p0, global::Com.Adjust.Sdk.ILogger p1)
		{
			const string __id = "getPayloadFromSystemPropertyFilePath.(Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='getPayloadFromSystemPropertyFilePathReflection' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='com.adjust.sdk.ILogger']]"
		[Register ("getPayloadFromSystemPropertyFilePathReflection", "(Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;", "")]
		public static unsafe string GetPayloadFromSystemPropertyFilePathReflection (string p0, global::Com.Adjust.Sdk.ILogger p1)
		{
			const string __id = "getPayloadFromSystemPropertyFilePathReflection.(Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='getPayloadFromSystemPropertyReflection' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='com.adjust.sdk.ILogger']]"
		[Register ("getPayloadFromSystemPropertyReflection", "(Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;", "")]
		public static unsafe string GetPayloadFromSystemPropertyReflection (string p0, global::Com.Adjust.Sdk.ILogger p1)
		{
			const string __id = "getPayloadFromSystemPropertyReflection.(Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='getPayloadsFromContentProviderIntentAction' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='com.adjust.sdk.ILogger']]"
		[Register ("getPayloadsFromContentProviderIntentAction", "(Landroid/content/Context;Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/util/List;", "")]
		public static unsafe global::System.Collections.Generic.IList<string> GetPayloadsFromContentProviderIntentAction (global::Android.Content.Context p0, string p1, global::Com.Adjust.Sdk.ILogger p2)
		{
			const string __id = "getPayloadsFromContentProviderIntentAction.(Landroid/content/Context;Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/util/List;";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaList<string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='getPayloadsFromContentProviderNoPermission' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='com.adjust.sdk.ILogger']]"
		[Register ("getPayloadsFromContentProviderNoPermission", "(Landroid/content/Context;Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/util/List;", "")]
		public static unsafe global::System.Collections.Generic.IList<string> GetPayloadsFromContentProviderNoPermission (global::Android.Content.Context p0, string p1, global::Com.Adjust.Sdk.ILogger p2)
		{
			const string __id = "getPayloadsFromContentProviderNoPermission.(Landroid/content/Context;Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Ljava/util/List;";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaList<string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='hasAllLocationsBeenRead' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("hasAllLocationsBeenRead", "(J)Z", "")]
		public static unsafe bool HasAllLocationsBeenRead (long p0)
		{
			const string __id = "hasAllLocationsBeenRead.(J)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='hasNotBeenRead' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='long']]"
		[Register ("hasNotBeenRead", "(Ljava/lang/String;J)Z", "")]
		public static unsafe bool HasNotBeenRead (string p0, long p1)
		{
			const string __id = "hasNotBeenRead.(Ljava/lang/String;J)Z";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='PreinstallUtil']/method[@name='markAsRead' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='long']]"
		[Register ("markAsRead", "(Ljava/lang/String;J)J", "")]
		public static unsafe long MarkAsRead (string p0, long p1)
		{
			const string __id = "markAsRead.(Ljava/lang/String;J)J";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

	}
}
