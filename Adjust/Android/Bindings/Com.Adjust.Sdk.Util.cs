//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Adjust.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']"
	[global::Android.Runtime.Register ("com/adjust/sdk/Util", DoNotGenerateAcw=true)]
	public partial class Util : global::Java.Lang.Object {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/field[@name='dateFormatter']"
		[Register ("dateFormatter")]
		public static global::Java.Text.SimpleDateFormat DateFormatter {
			get {
				const string __id = "dateFormatter.Ljava/text/SimpleDateFormat;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Java.Text.SimpleDateFormat> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/field[@name='SecondsDisplayFormat']"
		[Register ("SecondsDisplayFormat")]
		public static global::Java.Text.DecimalFormat SecondsDisplayFormat {
			get {
				const string __id = "SecondsDisplayFormat.Ljava/text/DecimalFormat;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Java.Text.DecimalFormat> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/adjust/sdk/Util", typeof (Util));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected Util (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/constructor[@name='Util' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe Util () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe string CpuAbi {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getCpuAbi' and count(parameter)=0]"
			[Register ("getCpuAbi", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getCpuAbi.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string SdkVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getSdkVersion' and count(parameter)=0]"
			[Register ("getSdkVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getSdkVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='canReadNonPlayIds' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.AdjustConfig']]"
		[Register ("canReadNonPlayIds", "(Lcom/adjust/sdk/AdjustConfig;)Z", "")]
		public static unsafe bool CanReadNonPlayIds (global::Com.Adjust.Sdk.AdjustConfig p0)
		{
			const string __id = "canReadNonPlayIds.(Lcom/adjust/sdk/AdjustConfig;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='canReadPlayIds' and count(parameter)=1 and parameter[1][@type='com.adjust.sdk.AdjustConfig']]"
		[Register ("canReadPlayIds", "(Lcom/adjust/sdk/AdjustConfig;)Z", "")]
		public static unsafe bool CanReadPlayIds (global::Com.Adjust.Sdk.AdjustConfig p0)
		{
			const string __id = "canReadPlayIds.(Lcom/adjust/sdk/AdjustConfig;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='checkPermission' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]"
		[Register ("checkPermission", "(Landroid/content/Context;Ljava/lang/String;)Z", "")]
		public static unsafe bool CheckPermission (global::Android.Content.Context p0, string p1)
		{
			const string __id = "checkPermission.(Landroid/content/Context;Ljava/lang/String;)Z";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='convertToHex' and count(parameter)=1 and parameter[1][@type='byte[]']]"
		[Register ("convertToHex", "([B)Ljava/lang/String;", "")]
		public static unsafe string ConvertToHex (byte[] p0)
		{
			const string __id = "convertToHex.([B)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewArray (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (p0 != null) {
					JNIEnv.CopyArray (native_p0, p0);
					JNIEnv.DeleteLocalRef (native_p0);
				}
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='createUuid' and count(parameter)=0]"
		[Register ("createUuid", "()Ljava/lang/String;", "")]
		public static unsafe string CreateUuid ()
		{
			const string __id = "createUuid.()Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='equalBoolean' and count(parameter)=2 and parameter[1][@type='java.lang.Boolean'] and parameter[2][@type='java.lang.Boolean']]"
		[Register ("equalBoolean", "(Ljava/lang/Boolean;Ljava/lang/Boolean;)Z", "")]
		public static unsafe bool EqualBoolean (global::Java.Lang.Boolean p0, global::Java.Lang.Boolean p1)
		{
			const string __id = "equalBoolean.(Ljava/lang/Boolean;Ljava/lang/Boolean;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='equalEnum' and count(parameter)=2 and parameter[1][@type='java.lang.Enum'] and parameter[2][@type='java.lang.Enum']]"
		[Register ("equalEnum", "(Ljava/lang/Enum;Ljava/lang/Enum;)Z", "")]
		public static unsafe bool EqualEnum (global::Java.Lang.Enum p0, global::Java.Lang.Enum p1)
		{
			const string __id = "equalEnum.(Ljava/lang/Enum;Ljava/lang/Enum;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='equalInt' and count(parameter)=2 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='java.lang.Integer']]"
		[Register ("equalInt", "(Ljava/lang/Integer;Ljava/lang/Integer;)Z", "")]
		public static unsafe bool EqualInt (global::Java.Lang.Integer p0, global::Java.Lang.Integer p1)
		{
			const string __id = "equalInt.(Ljava/lang/Integer;Ljava/lang/Integer;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='equalLong' and count(parameter)=2 and parameter[1][@type='java.lang.Long'] and parameter[2][@type='java.lang.Long']]"
		[Register ("equalLong", "(Ljava/lang/Long;Ljava/lang/Long;)Z", "")]
		public static unsafe bool EqualLong (global::Java.Lang.Long p0, global::Java.Lang.Long p1)
		{
			const string __id = "equalLong.(Ljava/lang/Long;Ljava/lang/Long;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='equalObject' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='java.lang.Object']]"
		[Register ("equalObject", "(Ljava/lang/Object;Ljava/lang/Object;)Z", "")]
		public static unsafe bool EqualObject (global::Java.Lang.Object p0, global::Java.Lang.Object p1)
		{
			const string __id = "equalObject.(Ljava/lang/Object;Ljava/lang/Object;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='equalString' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("equalString", "(Ljava/lang/String;Ljava/lang/String;)Z", "")]
		public static unsafe bool EqualString (string p0, string p1)
		{
			const string __id = "equalString.(Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='equalsDouble' and count(parameter)=2 and parameter[1][@type='java.lang.Double'] and parameter[2][@type='java.lang.Double']]"
		[Register ("equalsDouble", "(Ljava/lang/Double;Ljava/lang/Double;)Z", "")]
		public static unsafe bool EqualsDouble (global::Java.Lang.Double p0, global::Java.Lang.Double p1)
		{
			const string __id = "equalsDouble.(Ljava/lang/Double;Ljava/lang/Double;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='formatString' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Object...']]"
		[Register ("formatString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", "")]
		public static unsafe string FormatString (string p0, params global::Java.Lang.Object[] p1)
		{
			const string __id = "formatString.(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getAdvertisingInfoObject' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='long']]"
		[Register ("getAdvertisingInfoObject", "(Landroid/content/Context;J)Ljava/lang/Object;", "")]
		public static unsafe global::Java.Lang.Object GetAdvertisingInfoObject (global::Android.Content.Context p0, long p1)
		{
			const string __id = "getAdvertisingInfoObject.(Landroid/content/Context;J)Ljava/lang/Object;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getAndroidId' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("getAndroidId", "(Landroid/content/Context;)Ljava/lang/String;", "")]
		public static unsafe string GetAndroidId (global::Android.Content.Context p0)
		{
			const string __id = "getAndroidId.(Landroid/content/Context;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getGoogleAdId' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.adjust.sdk.OnDeviceIdsRead']]"
		[Register ("getGoogleAdId", "(Landroid/content/Context;Lcom/adjust/sdk/OnDeviceIdsRead;)V", "")]
		public static unsafe void GetGoogleAdId (global::Android.Content.Context p0, global::Com.Adjust.Sdk.IOnDeviceIdsRead p1)
		{
			const string __id = "getGoogleAdId.(Landroid/content/Context;Lcom/adjust/sdk/OnDeviceIdsRead;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getLocale' and count(parameter)=1 and parameter[1][@type='android.content.res.Configuration']]"
		[Register ("getLocale", "(Landroid/content/res/Configuration;)Ljava/util/Locale;", "")]
		public static unsafe global::Java.Util.Locale GetLocale (global::Android.Content.Res.Configuration p0)
		{
			const string __id = "getLocale.(Landroid/content/res/Configuration;)Ljava/util/Locale;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Util.Locale> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getPlayAdId' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.Object'] and parameter[3][@type='long']]"
		[Register ("getPlayAdId", "(Landroid/content/Context;Ljava/lang/Object;J)Ljava/lang/String;", "")]
		public static unsafe string GetPlayAdId (global::Android.Content.Context p0, global::Java.Lang.Object p1, long p2)
		{
			const string __id = "getPlayAdId.(Landroid/content/Context;Ljava/lang/Object;J)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getReasonString' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Throwable']]"
		[Register ("getReasonString", "(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;", "")]
		public static unsafe string GetReasonString (string p0, global::Java.Lang.Throwable p1)
		{
			const string __id = "getReasonString.(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getRootCause' and count(parameter)=1 and parameter[1][@type='java.lang.Exception']]"
		[Register ("getRootCause", "(Ljava/lang/Exception;)Ljava/lang/String;", "")]
		public static unsafe string GetRootCause (global::Java.Lang.Exception p0)
		{
			const string __id = "getRootCause.(Ljava/lang/Exception;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) p0).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getSdkPrefixPlatform' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getSdkPrefixPlatform", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string GetSdkPrefixPlatform (string p0)
		{
			const string __id = "getSdkPrefixPlatform.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getSupportedAbis' and count(parameter)=0]"
		[Register ("getSupportedAbis", "()[Ljava/lang/String;", "")]
		public static unsafe string[] GetSupportedAbis ()
		{
			const string __id = "getSupportedAbis.()[Ljava/lang/String;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return (string[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (string));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='getWaitingTime' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='com.adjust.sdk.BackoffStrategy']]"
		[Register ("getWaitingTime", "(ILcom/adjust/sdk/BackoffStrategy;)J", "")]
		public static unsafe long GetWaitingTime (int p0, global::Com.Adjust.Sdk.BackoffStrategy p1)
		{
			const string __id = "getWaitingTime.(ILcom/adjust/sdk/BackoffStrategy;)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='hasRootCause' and count(parameter)=1 and parameter[1][@type='java.lang.Exception']]"
		[Register ("hasRootCause", "(Ljava/lang/Exception;)Z", "")]
		public static unsafe bool HasRootCause (global::Java.Lang.Exception p0)
		{
			const string __id = "hasRootCause.(Ljava/lang/Exception;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) p0).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='hash' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("hash", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string Hash (string p0, string p1)
		{
			const string __id = "hash.(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='hashBoolean' and count(parameter)=2 and parameter[1][@type='java.lang.Boolean'] and parameter[2][@type='int']]"
		[Register ("hashBoolean", "(Ljava/lang/Boolean;I)I", "")]
		public static unsafe int HashBoolean (global::Java.Lang.Boolean p0, int p1)
		{
			const string __id = "hashBoolean.(Ljava/lang/Boolean;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='hashDouble' and count(parameter)=2 and parameter[1][@type='java.lang.Double'] and parameter[2][@type='int']]"
		[Register ("hashDouble", "(Ljava/lang/Double;I)I", "")]
		public static unsafe int HashDouble (global::Java.Lang.Double p0, int p1)
		{
			const string __id = "hashDouble.(Ljava/lang/Double;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='hashEnum' and count(parameter)=2 and parameter[1][@type='java.lang.Enum'] and parameter[2][@type='int']]"
		[Register ("hashEnum", "(Ljava/lang/Enum;I)I", "")]
		public static unsafe int HashEnum (global::Java.Lang.Enum p0, int p1)
		{
			const string __id = "hashEnum.(Ljava/lang/Enum;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='hashLong' and count(parameter)=2 and parameter[1][@type='java.lang.Long'] and parameter[2][@type='int']]"
		[Register ("hashLong", "(Ljava/lang/Long;I)I", "")]
		public static unsafe int HashLong (global::Java.Lang.Long p0, int p1)
		{
			const string __id = "hashLong.(Ljava/lang/Long;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='hashObject' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='int']]"
		[Register ("hashObject", "(Ljava/lang/Object;I)I", "")]
		public static unsafe int HashObject (global::Java.Lang.Object p0, int p1)
		{
			const string __id = "hashObject.(Ljava/lang/Object;I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='hashString' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
		[Register ("hashString", "(Ljava/lang/String;I)I", "")]
		public static unsafe int HashString (string p0, int p1)
		{
			const string __id = "hashString.(Ljava/lang/String;I)I";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='isAdjustUninstallDetectionPayload' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]"
		[Register ("isAdjustUninstallDetectionPayload", "(Ljava/util/Map;)Z", "")]
		public static unsafe bool IsAdjustUninstallDetectionPayload (global::System.Collections.Generic.IDictionary<string, string> p0)
		{
			const string __id = "isAdjustUninstallDetectionPayload.(Ljava/util/Map;)Z";
			IntPtr native_p0 = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='isEqualReferrerDetails' and count(parameter)=3 and parameter[1][@type='com.adjust.sdk.ReferrerDetails'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='com.adjust.sdk.ActivityState']]"
		[Register ("isEqualReferrerDetails", "(Lcom/adjust/sdk/ReferrerDetails;Ljava/lang/String;Lcom/adjust/sdk/ActivityState;)Z", "")]
		public static unsafe bool IsEqualReferrerDetails (global::Com.Adjust.Sdk.ReferrerDetails p0, string p1, global::Com.Adjust.Sdk.ActivityState p2)
		{
			const string __id = "isEqualReferrerDetails.(Lcom/adjust/sdk/ReferrerDetails;Ljava/lang/String;Lcom/adjust/sdk/ActivityState;)Z";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue ((p2 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p2).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='isGooglePlayGamesForPC' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("isGooglePlayGamesForPC", "(Landroid/content/Context;)Z", "")]
		public static unsafe bool IsGooglePlayGamesForPC (global::Android.Content.Context p0)
		{
			const string __id = "isGooglePlayGamesForPC.(Landroid/content/Context;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='isPlayTrackingEnabled' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.Object'] and parameter[3][@type='long']]"
		[Register ("isPlayTrackingEnabled", "(Landroid/content/Context;Ljava/lang/Object;J)Ljava/lang/Boolean;", "")]
		public static unsafe global::Java.Lang.Boolean IsPlayTrackingEnabled (global::Android.Content.Context p0, global::Java.Lang.Object p1, long p2)
		{
			const string __id = "isPlayTrackingEnabled.(Landroid/content/Context;Ljava/lang/Object;J)Ljava/lang/Boolean;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Boolean> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='isUrlFilteredOut' and count(parameter)=1 and parameter[1][@type='android.net.Uri']]"
		[Register ("isUrlFilteredOut", "(Landroid/net/Uri;)Z", "")]
		public static unsafe bool IsUrlFilteredOut (global::Android.Net.Uri p0)
		{
			const string __id = "isUrlFilteredOut.(Landroid/net/Uri;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='isValidParameter' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("isValidParameter", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z", "")]
		public static unsafe bool IsValidParameter (string p0, string p1, string p2)
		{
			const string __id = "isValidParameter.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			IntPtr native_p2 = JNIEnv.NewString ((string)p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='mergeParameters' and count(parameter)=3 and parameter[1][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[2][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'] and parameter[3][@type='java.lang.String']]"
		[Register ("mergeParameters", "(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;", "")]
		public static unsafe global::System.Collections.Generic.IDictionary<string, string> MergeParameters (global::System.Collections.Generic.IDictionary<string, string> p0, global::System.Collections.Generic.IDictionary<string, string> p1, string p2)
		{
			const string __id = "mergeParameters.(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;";
			IntPtr native_p0 = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (p0);
			IntPtr native_p1 = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (p1);
			IntPtr native_p2 = JNIEnv.NewString ((string)p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				JNIEnv.DeleteLocalRef (native_p2);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='quote' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("quote", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string Quote (string p0)
		{
			const string __id = "quote.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='readBooleanField' and count(parameter)=3 and parameter[1][@type='java.io.ObjectInputStream.GetField'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='boolean']]"
		[Register ("readBooleanField", "(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;Z)Z", "")]
		public static unsafe bool ReadBooleanField (global::Java.IO.ObjectInputStream.GetField p0, string p1, bool p2)
		{
			const string __id = "readBooleanField.(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;Z)Z";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='readDoubleField' and count(parameter)=3 and parameter[1][@type='java.io.ObjectInputStream.GetField'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='double']]"
		[Register ("readDoubleField", "(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;D)D", "")]
		public static unsafe double ReadDoubleField (global::Java.IO.ObjectInputStream.GetField p0, string p1, double p2)
		{
			const string __id = "readDoubleField.(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;D)D";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeDoubleMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='readIntField' and count(parameter)=3 and parameter[1][@type='java.io.ObjectInputStream.GetField'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int']]"
		[Register ("readIntField", "(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;I)I", "")]
		public static unsafe int ReadIntField (global::Java.IO.ObjectInputStream.GetField p0, string p1, int p2)
		{
			const string __id = "readIntField.(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;I)I";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='readLongField' and count(parameter)=3 and parameter[1][@type='java.io.ObjectInputStream.GetField'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='long']]"
		[Register ("readLongField", "(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;J)J", "")]
		public static unsafe long ReadLongField (global::Java.IO.ObjectInputStream.GetField p0, string p1, long p2)
		{
			const string __id = "readLongField.(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;J)J";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='readObject' and count(parameter)=4 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.Class&lt;T&gt;']]"
		[Register ("readObject", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;", "")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
		public static unsafe global::Java.Lang.Object ReadObject (global::Android.Content.Context p0, string p1, string p2, global::Java.Lang.Class p3)
		{
			const string __id = "readObject.(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			IntPtr native_p2 = JNIEnv.NewString ((string)p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue ((p3 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p3).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				JNIEnv.DeleteLocalRef (native_p2);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p3);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='readObjectField' and count(parameter)=3 and parameter[1][@type='java.io.ObjectInputStream.GetField'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='T']]"
		[Register ("readObjectField", "(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;", "")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
		public static unsafe global::Java.Lang.Object ReadObjectField (global::Java.IO.ObjectInputStream.GetField p0, string p1, global::Java.Lang.Object p2)
		{
			const string __id = "readObjectField.(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			IntPtr native_p2 = JNIEnv.ToLocalJniHandle (p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				JNIEnv.DeleteLocalRef (native_p2);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='readStringField' and count(parameter)=3 and parameter[1][@type='java.io.ObjectInputStream.GetField'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("readStringField", "(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string ReadStringField (global::Java.IO.ObjectInputStream.GetField p0, string p1, string p2)
		{
			const string __id = "readStringField.(Ljava/io/ObjectInputStream$GetField;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			IntPtr native_p2 = JNIEnv.NewString ((string)p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (native_p2);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				JNIEnv.DeleteLocalRef (native_p2);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='resolveContentProvider' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='java.lang.String']]"
		[Register ("resolveContentProvider", "(Landroid/content/Context;Ljava/lang/String;)Z", "")]
		public static unsafe bool ResolveContentProvider (global::Android.Content.Context p0, string p1)
		{
			const string __id = "resolveContentProvider.(Landroid/content/Context;Ljava/lang/String;)Z";
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='sha256' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("sha256", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string Sha256 (string p0)
		{
			const string __id = "sha256.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.adjust.sdk']/class[@name='Util']/method[@name='writeObject' and count(parameter)=4 and parameter[1][@type='T'] and parameter[2][@type='android.content.Context'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
		[Register ("writeObject", "(Ljava/lang/Object;Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V", "")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
		public static unsafe void WriteObject (global::Java.Lang.Object p0, global::Android.Content.Context p1, string p2, string p3)
		{
			const string __id = "writeObject.(Ljava/lang/Object;Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.ToLocalJniHandle (p0);
			IntPtr native_p2 = JNIEnv.NewString ((string)p2);
			IntPtr native_p3 = JNIEnv.NewString ((string)p3);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				__args [2] = new JniArgumentValue (native_p2);
				__args [3] = new JniArgumentValue (native_p3);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

	}
}
