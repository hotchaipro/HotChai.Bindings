//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.IronSource.MediationSdk.Config {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.ironsource.mediationsdk.config']/class[@name='ConfigFile']"
	[global::Android.Runtime.Register ("com/ironsource/mediationsdk/config/ConfigFile", DoNotGenerateAcw=true)]
	public partial class ConfigFile : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/ironsource/mediationsdk/config/ConfigFile", typeof (ConfigFile));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ConfigFile (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.ironsource.mediationsdk.config']/class[@name='ConfigFile']/constructor[@name='ConfigFile' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe ConfigFile () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_getPluginFrameworkVersion;
#pragma warning disable 0169
		static Delegate GetGetPluginFrameworkVersionHandler ()
		{
			if (cb_getPluginFrameworkVersion == null)
				cb_getPluginFrameworkVersion = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPluginFrameworkVersion));
			return cb_getPluginFrameworkVersion;
		}

		static IntPtr n_GetPluginFrameworkVersion (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Config.ConfigFile> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.PluginFrameworkVersion);
		}
#pragma warning restore 0169

		public virtual unsafe string PluginFrameworkVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.config']/class[@name='ConfigFile']/method[@name='getPluginFrameworkVersion' and count(parameter)=0]"
			[Register ("getPluginFrameworkVersion", "()Ljava/lang/String;", "GetGetPluginFrameworkVersionHandler")]
			get {
				const string __id = "getPluginFrameworkVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getPluginType;
#pragma warning disable 0169
		static Delegate GetGetPluginTypeHandler ()
		{
			if (cb_getPluginType == null)
				cb_getPluginType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPluginType));
			return cb_getPluginType;
		}

		static IntPtr n_GetPluginType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Config.ConfigFile> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.PluginType);
		}
#pragma warning restore 0169

		public virtual unsafe string PluginType {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.config']/class[@name='ConfigFile']/method[@name='getPluginType' and count(parameter)=0]"
			[Register ("getPluginType", "()Ljava/lang/String;", "GetGetPluginTypeHandler")]
			get {
				const string __id = "getPluginType.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getPluginVersion;
#pragma warning disable 0169
		static Delegate GetGetPluginVersionHandler ()
		{
			if (cb_getPluginVersion == null)
				cb_getPluginVersion = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPluginVersion));
			return cb_getPluginVersion;
		}

		static IntPtr n_GetPluginVersion (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Config.ConfigFile> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.PluginVersion);
		}
#pragma warning restore 0169

		public virtual unsafe string PluginVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.config']/class[@name='ConfigFile']/method[@name='getPluginVersion' and count(parameter)=0]"
			[Register ("getPluginVersion", "()Ljava/lang/String;", "GetGetPluginVersionHandler")]
			get {
				const string __id = "getPluginVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.config']/class[@name='ConfigFile']/method[@name='getConfigFile' and count(parameter)=0]"
		[Register ("getConfigFile", "()Lcom/ironsource/mediationsdk/config/ConfigFile;", "")]
		public static unsafe global::Com.IronSource.MediationSdk.Config.ConfigFile GetConfigFile ()
		{
			const string __id = "getConfigFile.()Lcom/ironsource/mediationsdk/config/ConfigFile;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Config.ConfigFile> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_setPluginData_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetPluginData_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_setPluginData_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_setPluginData_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_V (n_SetPluginData_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_));
			return cb_setPluginData_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
		}

		static void n_SetPluginData_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Config.ConfigFile> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
			var p2 = JNIEnv.GetString (native_p2, JniHandleOwnership.DoNotTransfer);
			__this.SetPluginData (p0, p1, p2);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.config']/class[@name='ConfigFile']/method[@name='setPluginData' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("setPluginData", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetSetPluginData_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe void SetPluginData (string p0, string p1, string p2)
		{
			const string __id = "setPluginData.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			IntPtr native_p2 = JNIEnv.NewString ((string)p2);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				__args [2] = new JniArgumentValue (native_p2);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				JNIEnv.DeleteLocalRef (native_p2);
			}
		}

	}
}
