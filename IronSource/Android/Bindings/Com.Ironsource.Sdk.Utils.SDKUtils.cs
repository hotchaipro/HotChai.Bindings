//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.IronSource.Sdk.Utils {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']"
	[global::Android.Runtime.Register ("com/ironsource/sdk/utils/SDKUtils", DoNotGenerateAcw=true)]
	public partial class SDKUtils : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/ironsource/sdk/utils/SDKUtils", typeof (SDKUtils));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected SDKUtils (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/constructor[@name='SDKUtils' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe SDKUtils () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe string AdvertiserId {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getAdvertiserId' and count(parameter)=0]"
			[Register ("getAdvertiserId", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getAdvertiserId.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string ControllerConfig {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getControllerConfig' and count(parameter)=0]"
			[Register ("getControllerConfig", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getControllerConfig.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='setControllerConfig' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setControllerConfig", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setControllerConfig.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe global::Org.Json.JSONObject ControllerConfigAsJSONObject {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getControllerConfigAsJSONObject' and count(parameter)=0]"
			[Register ("getControllerConfigAsJSONObject", "()Lorg/json/JSONObject;", "")]
			get {
				const string __id = "getControllerConfigAsJSONObject.()Lorg/json/JSONObject;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Org.Json.JSONObject> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string ControllerUrl {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getControllerUrl' and count(parameter)=0]"
			[Register ("getControllerUrl", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getControllerUrl.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='setControllerUrl' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setControllerUrl", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setControllerUrl.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		[global::System.Obsolete (@"deprecated")]
		public static unsafe int DebugMode {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getDebugMode' and count(parameter)=0]"
			[Register ("getDebugMode", "()I", "")]
			get {
				const string __id = "getDebugMode.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='setDebugMode' and count(parameter)=1 and parameter[1][@type='int']]"
			[Register ("setDebugMode", "(I)V", "")]
			set {
				const string __id = "setDebugMode.(I)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
				}
			}
		}

		public static unsafe global::System.Collections.Generic.IDictionary<string, string> InitSDKParams {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getInitSDKParams' and count(parameter)=0]"
			[Register ("getInitSDKParams", "()Ljava/util/Map;", "")]
			get {
				const string __id = "getInitSDKParams.()Ljava/util/Map;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='setInitSDKParams' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]"
			[Register ("setInitSDKParams", "(Ljava/util/Map;)V", "")]
			set {
				const string __id = "setInitSDKParams.(Ljava/util/Map;)V";
				IntPtr native_value = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public static unsafe bool IsExternalStorageAvailable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='isExternalStorageAvailable' and count(parameter)=0]"
			[Register ("isExternalStorageAvailable", "()Z", "")]
			get {
				const string __id = "isExternalStorageAvailable.()Z";
				try {
					var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe string LimitAdTracking {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getLimitAdTracking' and count(parameter)=0]"
			[Register ("getLimitAdTracking", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getLimitAdTracking.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe int MinOSVersionSupport {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getMinOSVersionSupport' and count(parameter)=0]"
			[Register ("getMinOSVersionSupport", "()I", "")]
			get {
				const string __id = "getMinOSVersionSupport.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe global::Org.Json.JSONObject NetworkConfiguration {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getNetworkConfiguration' and count(parameter)=0]"
			[Register ("getNetworkConfiguration", "()Lorg/json/JSONObject;", "")]
			get {
				const string __id = "getNetworkConfiguration.()Lorg/json/JSONObject;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Org.Json.JSONObject> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string SDKVersion {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getSDKVersion' and count(parameter)=0]"
			[Register ("getSDKVersion", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getSDKVersion.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string TesterParameters {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getTesterParameters' and count(parameter)=0]"
			[Register ("getTesterParameters", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getTesterParameters.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='setTesterParameters' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setTesterParameters", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setTesterParameters.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='convertDpToPx' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("convertDpToPx", "(I)I", "")]
		public static unsafe int ConvertDpToPx (int p0)
		{
			const string __id = "convertDpToPx.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='convertPxToDp' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("convertPxToDp", "(I)I", "")]
		public static unsafe int ConvertPxToDp (int p0)
		{
			const string __id = "convertPxToDp.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='decodeString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("decodeString", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string DecodeString (string p0)
		{
			const string __id = "decodeString.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='dpToPx' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("dpToPx", "(J)I", "")]
		public static unsafe int DpToPx (long p0)
		{
			const string __id = "dpToPx.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='encodeString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("encodeString", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string EncodeString (string p0)
		{
			const string __id = "encodeString.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='encrypt' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("encrypt", "(Ljava/lang/String;)[B", "")]
		public static unsafe byte[] Encrypt (string p0)
		{
			const string __id = "encrypt.(Ljava/lang/String;)[B";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='fetchDemandSourceId' and count(parameter)=1 and parameter[1][@type='org.json.JSONObject']]"
		[Register ("fetchDemandSourceId", "(Lorg/json/JSONObject;)Ljava/lang/String;", "")]
		public static unsafe string FetchDemandSourceId (global::Org.Json.JSONObject p0)
		{
			const string __id = "fetchDemandSourceId.(Lorg/json/JSONObject;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='flatMapToJsonAsString' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]"
		[Register ("flatMapToJsonAsString", "(Ljava/util/Map;)Ljava/lang/String;", "")]
		public static unsafe string FlatMapToJsonAsString (global::System.Collections.Generic.IDictionary<string, string> p0)
		{
			const string __id = "flatMapToJsonAsString.(Ljava/util/Map;)Ljava/lang/String;";
			IntPtr native_p0 = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='generateViewId' and count(parameter)=0]"
		[Register ("generateViewId", "()I", "")]
		public static unsafe int GenerateViewId ()
		{
			const string __id = "generateViewId.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getActivityUIFlags' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("getActivityUIFlags", "(Z)I", "")]
		public static unsafe int GetActivityUIFlags (bool p0)
		{
			const string __id = "getActivityUIFlags.(Z)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getFileName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getFileName", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string GetFileName (string p0)
		{
			const string __id = "getFileName.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getMD5' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getMD5", "(Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string GetMD5 (string p0)
		{
			const string __id = "getMD5.(Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getOrientation' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("getOrientation", "(Landroid/content/Context;)Lorg/json/JSONObject;", "")]
		public static unsafe global::Org.Json.JSONObject GetOrientation (global::Android.Content.Context p0)
		{
			const string __id = "getOrientation.(Landroid/content/Context;)Lorg/json/JSONObject;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Org.Json.JSONObject> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='getValueFromJsonObject' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("getValueFromJsonObject", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string GetValueFromJsonObject (string p0, string p1)
		{
			const string __id = "getValueFromJsonObject.(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='isApplicationVisible' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("isApplicationVisible", "(Landroid/content/Context;)Z", "")]
		public static unsafe bool IsApplicationVisible (global::Android.Content.Context p0)
		{
			const string __id = "isApplicationVisible.(Landroid/content/Context;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='isIronSourceActivity' and count(parameter)=1 and parameter[1][@type='android.app.Activity']]"
		[Register ("isIronSourceActivity", "(Landroid/app/Activity;)Z", "")]
		public static unsafe bool IsIronSourceActivity (global::Android.App.Activity p0)
		{
			const string __id = "isIronSourceActivity.(Landroid/app/Activity;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='loadGoogleAdvertiserInfo' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("loadGoogleAdvertiserInfo", "(Landroid/content/Context;)V", "")]
		public static unsafe void LoadGoogleAdvertiserInfo (global::Android.Content.Context p0)
		{
			const string __id = "loadGoogleAdvertiserInfo.(Landroid/content/Context;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='mergeHashMaps' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;[]']]"
		[Register ("mergeHashMaps", "([Ljava/util/Map;)Ljava/util/Map;", "")]
		public static unsafe global::System.Collections.Generic.IDictionary<string, string> MergeHashMaps (global::System.Collections.Generic.IDictionary<string, string>[] p0)
		{
			const string __id = "mergeHashMaps.([Ljava/util/Map;)Ljava/util/Map;";
			IntPtr native_p0 = JNIEnv.NewArray (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				if (p0 != null) {
					JNIEnv.CopyArray (native_p0, p0);
					JNIEnv.DeleteLocalRef (native_p0);
				}
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='mergeJSONObjects' and count(parameter)=2 and parameter[1][@type='org.json.JSONObject'] and parameter[2][@type='org.json.JSONObject']]"
		[Register ("mergeJSONObjects", "(Lorg/json/JSONObject;Lorg/json/JSONObject;)Lorg/json/JSONObject;", "")]
		public static unsafe global::Org.Json.JSONObject MergeJSONObjects (global::Org.Json.JSONObject p0, global::Org.Json.JSONObject p1)
		{
			const string __id = "mergeJSONObjects.(Lorg/json/JSONObject;Lorg/json/JSONObject;)Lorg/json/JSONObject;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Org.Json.JSONObject> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='pxToDp' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register ("pxToDp", "(J)I", "")]
		public static unsafe int PxToDp (long p0)
		{
			const string __id = "pxToDp.(J)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='requireNonEmptyOrNull' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("requireNonEmptyOrNull", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string RequireNonEmptyOrNull (string p0, string p1)
		{
			const string __id = "requireNonEmptyOrNull.(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='requireNonNull' and count(parameter)=2 and parameter[1][@type='T'] and parameter[2][@type='java.lang.String']]"
		[Register ("requireNonNull", "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;", "")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
		public static unsafe global::Java.Lang.Object RequireNonNull (global::Java.Lang.Object p0, string p1)
		{
			const string __id = "requireNonNull.(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;";
			IntPtr native_p0 = JNIEnv.ToLocalJniHandle (p0);
			IntPtr native_p1 = JNIEnv.NewString ((string)p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='showNoInternetDialog' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("showNoInternetDialog", "(Landroid/content/Context;)V", "")]
		public static unsafe void ShowNoInternetDialog (global::Android.Content.Context p0)
		{
			const string __id = "showNoInternetDialog.(Landroid/content/Context;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='translateDeviceOrientation' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("translateDeviceOrientation", "(I)Ljava/lang/String;", "")]
		public static unsafe string TranslateDeviceOrientation (int p0)
		{
			const string __id = "translateDeviceOrientation.(I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='translateOrientation' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("translateOrientation", "(I)Ljava/lang/String;", "")]
		public static unsafe string TranslateOrientation (int p0)
		{
			const string __id = "translateOrientation.(I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='translateRequestedOrientation' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("translateRequestedOrientation", "(I)Ljava/lang/String;", "")]
		public static unsafe string TranslateRequestedOrientation (int p0)
		{
			const string __id = "translateRequestedOrientation.(I)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.sdk.utils']/class[@name='SDKUtils']/method[@name='updateControllerConfig' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='org.json.JSONObject']]"
		[Register ("updateControllerConfig", "(Ljava/lang/String;Lorg/json/JSONObject;)V", "")]
		public static unsafe void UpdateControllerConfig (string p0, global::Org.Json.JSONObject p1)
		{
			const string __id = "updateControllerConfig.(Ljava/lang/String;Lorg/json/JSONObject;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

	}
}
