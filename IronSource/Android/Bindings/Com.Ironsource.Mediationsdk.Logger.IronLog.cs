//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.IronSource.MediationSdk.Logger {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']"
	[global::Android.Runtime.Register ("com/ironsource/mediationsdk/logger/IronLog", DoNotGenerateAcw=true)]
	public sealed partial class IronLog : global::Java.Lang.Enum {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/field[@name='ADAPTER_API']"
		[Register ("ADAPTER_API")]
		public static global::Com.IronSource.MediationSdk.Logger.IronLog AdapterApi {
			get {
				const string __id = "ADAPTER_API.Lcom/ironsource/mediationsdk/logger/IronLog;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Logger.IronLog> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/field[@name='ADAPTER_CALLBACK']"
		[Register ("ADAPTER_CALLBACK")]
		public static global::Com.IronSource.MediationSdk.Logger.IronLog AdapterCallback {
			get {
				const string __id = "ADAPTER_CALLBACK.Lcom/ironsource/mediationsdk/logger/IronLog;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Logger.IronLog> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/field[@name='API']"
		[Register ("API")]
		public static global::Com.IronSource.MediationSdk.Logger.IronLog Api {
			get {
				const string __id = "API.Lcom/ironsource/mediationsdk/logger/IronLog;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Logger.IronLog> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/field[@name='CALLBACK']"
		[Register ("CALLBACK")]
		public static global::Com.IronSource.MediationSdk.Logger.IronLog Callback {
			get {
				const string __id = "CALLBACK.Lcom/ironsource/mediationsdk/logger/IronLog;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Logger.IronLog> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/field[@name='EVENT']"
		[Register ("EVENT")]
		public static global::Com.IronSource.MediationSdk.Logger.IronLog Event {
			get {
				const string __id = "EVENT.Lcom/ironsource/mediationsdk/logger/IronLog;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Logger.IronLog> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/field[@name='INTERNAL']"
		[Register ("INTERNAL")]
		public static global::Com.IronSource.MediationSdk.Logger.IronLog Internal {
			get {
				const string __id = "INTERNAL.Lcom/ironsource/mediationsdk/logger/IronLog;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Logger.IronLog> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/field[@name='NATIVE']"
		[Register ("NATIVE")]
		public static global::Com.IronSource.MediationSdk.Logger.IronLog Native {
			get {
				const string __id = "NATIVE.Lcom/ironsource/mediationsdk/logger/IronLog;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Logger.IronLog> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/field[@name='NETWORK']"
		[Register ("NETWORK")]
		public static global::Com.IronSource.MediationSdk.Logger.IronLog Network {
			get {
				const string __id = "NETWORK.Lcom/ironsource/mediationsdk/logger/IronLog;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Logger.IronLog> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/ironsource/mediationsdk/logger/IronLog", typeof (IronLog));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal IronLog (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/method[@name='error' and count(parameter)=0]"
		[Register ("error", "()V", "")]
		public unsafe void Error ()
		{
			const string __id = "error.()V";
			try {
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/method[@name='error' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("error", "(Ljava/lang/String;)V", "")]
		public unsafe void Error (string p0)
		{
			const string __id = "error.(Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/method[@name='info' and count(parameter)=0]"
		[Register ("info", "()V", "")]
		public unsafe void Info ()
		{
			const string __id = "info.()V";
			try {
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/method[@name='info' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("info", "(Ljava/lang/String;)V", "")]
		public unsafe void Info (string p0)
		{
			const string __id = "info.(Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("valueOf", "(Ljava/lang/String;)Lcom/ironsource/mediationsdk/logger/IronLog;", "")]
		public static unsafe global::Com.IronSource.MediationSdk.Logger.IronLog ValueOf (string p0)
		{
			const string __id = "valueOf.(Ljava/lang/String;)Lcom/ironsource/mediationsdk/logger/IronLog;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Lang.Object.GetObject<global::Com.IronSource.MediationSdk.Logger.IronLog> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/method[@name='values' and count(parameter)=0]"
		[Register ("values", "()[Lcom/ironsource/mediationsdk/logger/IronLog;", "")]
		public static unsafe global::Com.IronSource.MediationSdk.Logger.IronLog[] Values ()
		{
			const string __id = "values.()[Lcom/ironsource/mediationsdk/logger/IronLog;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return (global::Com.IronSource.MediationSdk.Logger.IronLog[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (global::Com.IronSource.MediationSdk.Logger.IronLog));
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/method[@name='verbose' and count(parameter)=0]"
		[Register ("verbose", "()V", "")]
		public unsafe void Verbose ()
		{
			const string __id = "verbose.()V";
			try {
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/method[@name='verbose' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("verbose", "(Ljava/lang/String;)V", "")]
		public unsafe void Verbose (string p0)
		{
			const string __id = "verbose.(Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/method[@name='warning' and count(parameter)=0]"
		[Register ("warning", "()V", "")]
		public unsafe void Warning ()
		{
			const string __id = "warning.()V";
			try {
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.ironsource.mediationsdk.logger']/class[@name='IronLog']/method[@name='warning' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("warning", "(Ljava/lang/String;)V", "")]
		public unsafe void Warning (string p0)
		{
			const string __id = "warning.(Ljava/lang/String;)V";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

	}
}
