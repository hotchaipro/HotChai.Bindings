//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Singular.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularJSInterface']"
	[global::Android.Runtime.Register ("com/singular/sdk/SingularJSInterface", DoNotGenerateAcw=true)]
	public partial class SingularJSInterface : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/singular/sdk/SingularJSInterface", typeof (SingularJSInterface));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected SingularJSInterface (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularJSInterface']/constructor[@name='SingularJSInterface' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register (".ctor", "(Landroid/content/Context;)V", "")]
		public unsafe SingularJSInterface (global::Android.Content.Context c) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((c == null) ? IntPtr.Zero : ((global::Java.Lang.Object) c).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (c);
			}
		}

		static Delegate cb_event_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetEvent_Ljava_lang_String_Handler ()
		{
			if (cb_event_Ljava_lang_String_ == null)
				cb_event_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_Event_Ljava_lang_String_));
			return cb_event_Ljava_lang_String_;
		}

		static bool n_Event_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Singular.Sdk.SingularJSInterface> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.Event (name);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularJSInterface']/method[@name='event' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("event", "(Ljava/lang/String;)Z", "GetEvent_Ljava_lang_String_Handler")]
		public virtual unsafe bool Event (string name)
		{
			const string __id = "event.(Ljava/lang/String;)Z";
			IntPtr native_name = JNIEnv.NewString ((string)name);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_name);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
			}
		}

		static Delegate cb_event_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetEvent_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_event_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_event_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_Event_Ljava_lang_String_Ljava_lang_String_));
			return cb_event_Ljava_lang_String_Ljava_lang_String_;
		}

		static void n_Event_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_name, IntPtr native_JSONString)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Singular.Sdk.SingularJSInterface> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var name = JNIEnv.GetString (native_name, JniHandleOwnership.DoNotTransfer);
			var JSONString = JNIEnv.GetString (native_JSONString, JniHandleOwnership.DoNotTransfer);
			__this.Event (name, JSONString);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularJSInterface']/method[@name='event' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("event", "(Ljava/lang/String;Ljava/lang/String;)V", "GetEvent_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe void Event (string name, string JSONString)
		{
			const string __id = "event.(Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_name = JNIEnv.NewString ((string)name);
			IntPtr native_JSONString = JNIEnv.NewString ((string)JSONString);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_name);
				__args [1] = new JniArgumentValue (native_JSONString);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_name);
				JNIEnv.DeleteLocalRef (native_JSONString);
			}
		}

		static Delegate cb_revenue_Ljava_lang_String_D;
#pragma warning disable 0169
		static Delegate GetRevenue_Ljava_lang_String_DHandler ()
		{
			if (cb_revenue_Ljava_lang_String_D == null)
				cb_revenue_Ljava_lang_String_D = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLD_V (n_Revenue_Ljava_lang_String_D));
			return cb_revenue_Ljava_lang_String_D;
		}

		static void n_Revenue_Ljava_lang_String_D (IntPtr jnienv, IntPtr native__this, IntPtr native_currency, double amount)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Singular.Sdk.SingularJSInterface> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var currency = JNIEnv.GetString (native_currency, JniHandleOwnership.DoNotTransfer);
			__this.Revenue (currency, amount);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularJSInterface']/method[@name='revenue' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='double']]"
		[Register ("revenue", "(Ljava/lang/String;D)V", "GetRevenue_Ljava_lang_String_DHandler")]
		public virtual unsafe void Revenue (string currency, double amount)
		{
			const string __id = "revenue.(Ljava/lang/String;D)V";
			IntPtr native_currency = JNIEnv.NewString ((string)currency);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_currency);
				__args [1] = new JniArgumentValue (amount);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_currency);
			}
		}

		static Delegate cb_setCustomUserId_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetCustomUserId_Ljava_lang_String_Handler ()
		{
			if (cb_setCustomUserId_Ljava_lang_String_ == null)
				cb_setCustomUserId_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetCustomUserId_Ljava_lang_String_));
			return cb_setCustomUserId_Ljava_lang_String_;
		}

		static void n_SetCustomUserId_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_customUserId)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Singular.Sdk.SingularJSInterface> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var customUserId = JNIEnv.GetString (native_customUserId, JniHandleOwnership.DoNotTransfer);
			__this.SetCustomUserId (customUserId);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularJSInterface']/method[@name='setCustomUserId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setCustomUserId", "(Ljava/lang/String;)V", "GetSetCustomUserId_Ljava_lang_String_Handler")]
		public virtual unsafe void SetCustomUserId (string customUserId)
		{
			const string __id = "setCustomUserId.(Ljava/lang/String;)V";
			IntPtr native_customUserId = JNIEnv.NewString ((string)customUserId);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_customUserId);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_customUserId);
			}
		}

		static Delegate cb_setWebViewId_I;
#pragma warning disable 0169
		static Delegate GetSetWebViewId_IHandler ()
		{
			if (cb_setWebViewId_I == null)
				cb_setWebViewId_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetWebViewId_I));
			return cb_setWebViewId_I;
		}

		static void n_SetWebViewId_I (IntPtr jnienv, IntPtr native__this, int id)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Singular.Sdk.SingularJSInterface> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.SetWebViewId (id);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularJSInterface']/method[@name='setWebViewId' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setWebViewId", "(I)V", "GetSetWebViewId_IHandler")]
		public virtual unsafe void SetWebViewId (int id)
		{
			const string __id = "setWebViewId.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (id);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_unsetCustomUserId;
#pragma warning disable 0169
		static Delegate GetUnsetCustomUserIdHandler ()
		{
			if (cb_unsetCustomUserId == null)
				cb_unsetCustomUserId = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_UnsetCustomUserId));
			return cb_unsetCustomUserId;
		}

		static void n_UnsetCustomUserId (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Singular.Sdk.SingularJSInterface> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.UnsetCustomUserId ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularJSInterface']/method[@name='unsetCustomUserId' and count(parameter)=0]"
		[Register ("unsetCustomUserId", "()V", "GetUnsetCustomUserIdHandler")]
		public virtual unsafe void UnsetCustomUserId ()
		{
			const string __id = "unsetCustomUserId.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

	}
}
