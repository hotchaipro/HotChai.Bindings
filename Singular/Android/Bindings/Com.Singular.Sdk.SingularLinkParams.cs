//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Singular.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularLinkParams']"
	[global::Android.Runtime.Register ("com/singular/sdk/SingularLinkParams", DoNotGenerateAcw=true)]
	public partial class SingularLinkParams : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/singular/sdk/SingularLinkParams", typeof (SingularLinkParams));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected SingularLinkParams (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularLinkParams']/constructor[@name='SingularLinkParams' and count(parameter)=4 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='boolean'] and parameter[4][@type='android.net.Uri']]"
		[Register (".ctor", "(Ljava/lang/String;Ljava/lang/String;ZLandroid/net/Uri;)V", "")]
		public unsafe SingularLinkParams (string deeplink, string passthrough, bool isDeferred, global::Android.Net.Uri link) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;Ljava/lang/String;ZLandroid/net/Uri;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_deeplink = JNIEnv.NewString ((string)deeplink);
			IntPtr native_passthrough = JNIEnv.NewString ((string)passthrough);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [4];
				__args [0] = new JniArgumentValue (native_deeplink);
				__args [1] = new JniArgumentValue (native_passthrough);
				__args [2] = new JniArgumentValue (isDeferred);
				__args [3] = new JniArgumentValue ((link == null) ? IntPtr.Zero : ((global::Java.Lang.Object) link).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_deeplink);
				JNIEnv.DeleteLocalRef (native_passthrough);
				global::System.GC.KeepAlive (link);
			}
		}

		static Delegate cb_getDeeplink;
#pragma warning disable 0169
		static Delegate GetGetDeeplinkHandler ()
		{
			if (cb_getDeeplink == null)
				cb_getDeeplink = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetDeeplink));
			return cb_getDeeplink;
		}

		static IntPtr n_GetDeeplink (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Singular.Sdk.SingularLinkParams> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.Deeplink);
		}
#pragma warning restore 0169

		public virtual unsafe string Deeplink {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularLinkParams']/method[@name='getDeeplink' and count(parameter)=0]"
			[Register ("getDeeplink", "()Ljava/lang/String;", "GetGetDeeplinkHandler")]
			get {
				const string __id = "getDeeplink.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_isDeferred;
#pragma warning disable 0169
		static Delegate GetIsDeferredHandler ()
		{
			if (cb_isDeferred == null)
				cb_isDeferred = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsDeferred));
			return cb_isDeferred;
		}

		static bool n_IsDeferred (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Singular.Sdk.SingularLinkParams> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsDeferred;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsDeferred {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularLinkParams']/method[@name='isDeferred' and count(parameter)=0]"
			[Register ("isDeferred", "()Z", "GetIsDeferredHandler")]
			get {
				const string __id = "isDeferred.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getPassthrough;
#pragma warning disable 0169
		static Delegate GetGetPassthroughHandler ()
		{
			if (cb_getPassthrough == null)
				cb_getPassthrough = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetPassthrough));
			return cb_getPassthrough;
		}

		static IntPtr n_GetPassthrough (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Singular.Sdk.SingularLinkParams> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.NewString (__this.Passthrough);
		}
#pragma warning restore 0169

		public virtual unsafe string Passthrough {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularLinkParams']/method[@name='getPassthrough' and count(parameter)=0]"
			[Register ("getPassthrough", "()Ljava/lang/String;", "GetGetPassthroughHandler")]
			get {
				const string __id = "getPassthrough.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getUrlParameters;
#pragma warning disable 0169
		static Delegate GetGetUrlParametersHandler ()
		{
			if (cb_getUrlParameters == null)
				cb_getUrlParameters = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetUrlParameters));
			return cb_getUrlParameters;
		}

		static IntPtr n_GetUrlParameters (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Singular.Sdk.SingularLinkParams> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (__this.UrlParameters);
		}
#pragma warning restore 0169

		public virtual unsafe global::System.Collections.Generic.IDictionary<string, string> UrlParameters {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.singular.sdk']/class[@name='SingularLinkParams']/method[@name='getUrlParameters' and count(parameter)=0]"
			[Register ("getUrlParameters", "()Ljava/util/HashMap;", "GetGetUrlParametersHandler")]
			get {
				const string __id = "getUrlParameters.()Ljava/util/HashMap;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

	}
}
